//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AppPluginIPC {
    struct IAppMessageReceivedCB *m_pAppCallback;
    struct IPluginMessageReceivedCB *m_pPluginCallback;
    struct ISendMessageToAppCB *m_pSendMessageToAppCallback;
    unsigned int m_nIpcChannel;
};

struct AppleVpnCertificate {
    struct auto_cfref<const __CFData *> _field1;
    struct auto_cfref<__SecCertificate *> _field2;
    struct x509_st *_field3;
};

struct AppleVpnCertificateList {
    long long m_nActiveCertificateIndex;
    vector_ee50fed1 m_certificateVector;
};

struct AppleVpnConfig {
    struct auto_cfref<const void *> _field1;
    struct auto_cfref<const __CFDictionary *> _field2;
    _Bool _field3;
    struct AxtVpnConfig *_field4;
};

struct AxtVpnConfig {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    _Bool _field6;
    id _field7;
    id _field8;
};

struct BandwidthGraphData {
    list_69940b9a _field1;
    int _field2;
    long long _field3;
    long long _field4;
    int _field5;
    long long _field6;
};

struct BandwidthViewData {
    NSString *label;
    UIColor *lineColor;
    UIColor *patternColor;
    UIColor *gradientStartColor;
    UIColor *gradientEndColor;
};

struct CAppLog;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CertificateItem;

struct CertificateItems {
    struct vector<CertificateItems::CertificateItem, std::__1::allocator<CertificateItems::CertificateItem>> m_certificateItems;
};

struct IAppMessageReceivedCB;

struct IOSAppLogger {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
    unsigned long long _field3;
    struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>>> _field4;
    unsigned long long _field5;
    struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
    unsigned long long _field7;
    id _field8;
};

struct IPluginMessageReceivedCB;

struct ISendMessageToAppCB;

struct MsgWithArg {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    struct SecureString<std::__1::basic_string<char>> _field3;
    struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field4;
};

struct PluginLoader {
    struct list<PluginLoader::DIR_CHANGE_LISTENER_CB *, std::__1::allocator<PluginLoader::DIR_CHANGE_LISTENER_CB *>> _field1;
    struct list<PluginLoader::LOADED_MODULE *, std::__1::allocator<PluginLoader::LOADED_MODULE *>> _field2;
    struct list<PluginLoader::AVAILABLE_MODULE *, std::__1::allocator<PluginLoader::AVAILABLE_MODULE *>> _field3;
    struct map<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>>> _field4;
    basic_string_90719d97 _field5;
};

struct PluginMessageReceiver {
    CDUnknownFunctionPointerType *_vptr$IAppMessageReceivedCB;
    id m_appFrameworkInteractionDelegate;
};

struct SNAKDeviceInfoPluginCBImpl {
    CDUnknownFunctionPointerType *_field1;
};

struct SNAK_DeviceInfoPlugin {
    CDUnknownFunctionPointerType *_field1;
};

struct SNAK_StoragePlugin {
    CDUnknownFunctionPointerType *_field1;
};

struct SecureString<std::__1::basic_string<char>> {
    basic_string_90719d97 _field1;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __CFDictionary;

struct __list_node_base<AppleVpnConfig *, void *> {
    struct __list_node_base<AppleVpnConfig *, void *> *__prev_;
    struct __list_node_base<AppleVpnConfig *, void *> *__next_;
};

struct __list_node_base<PluginLoader::AVAILABLE_MODULE *, void *> {
    struct __list_node_base<PluginLoader::AVAILABLE_MODULE *, void *> *_field1;
    struct __list_node_base<PluginLoader::AVAILABLE_MODULE *, void *> *_field2;
};

struct __list_node_base<PluginLoader::DIR_CHANGE_LISTENER_CB *, void *> {
    struct __list_node_base<PluginLoader::DIR_CHANGE_LISTENER_CB *, void *> *_field1;
    struct __list_node_base<PluginLoader::DIR_CHANGE_LISTENER_CB *, void *> *_field2;
};

struct __list_node_base<PluginLoader::LOADED_MODULE *, void *> {
    struct __list_node_base<PluginLoader::LOADED_MODULE *, void *> *_field1;
    struct __list_node_base<PluginLoader::LOADED_MODULE *, void *> *_field2;
};

struct __list_node_base<std::__1::basic_string<char>, void *> {
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field1;
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field2;
};

struct __list_node_base<std::__1::pair<long long, const __CFString *>, void *> {
    struct __list_node_base<std::__1::pair<long long, const __CFString *>, void *> *_field1;
    struct __list_node_base<std::__1::pair<long long, const __CFString *>, void *> *_field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct auto_cfref<__CFDictionary *> {
    struct __CFDictionary *_field1;
};

struct auto_cfref<__SecCertificate *> {
    struct __SecCertificate *_field1;
};

struct auto_cfref<const __CFData *> {
    struct __CFData *_field1;
};

struct auto_cfref<const __CFDictionary *> {
    struct __CFDictionary *_field1;
};

struct auto_cfref<const void *> {
    void *_field1;
};

struct auto_ptr<CAppLog> {
    struct CAppLog *__ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct list<AppleVpnConfig *, std::__1::allocator<AppleVpnConfig *>> {
    struct __list_node_base<AppleVpnConfig *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<AppleVpnConfig *, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<PluginLoader::AVAILABLE_MODULE *, std::__1::allocator<PluginLoader::AVAILABLE_MODULE *>> {
    struct __list_node_base<PluginLoader::AVAILABLE_MODULE *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PluginLoader::AVAILABLE_MODULE *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<PluginLoader::DIR_CHANGE_LISTENER_CB *, std::__1::allocator<PluginLoader::DIR_CHANGE_LISTENER_CB *>> {
    struct __list_node_base<PluginLoader::DIR_CHANGE_LISTENER_CB *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PluginLoader::DIR_CHANGE_LISTENER_CB *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<PluginLoader::LOADED_MODULE *, std::__1::allocator<PluginLoader::LOADED_MODULE *>> {
    struct __list_node_base<PluginLoader::LOADED_MODULE *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PluginLoader::LOADED_MODULE *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<long long, const __CFString *>, std::__1::allocator<std::__1::pair<long long, const __CFString *>>> {
    struct __list_node_base<std::__1::pair<long long, const __CFString *>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<long long, const __CFString *>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<std::__1::basic_string<char>, BandwidthGraphData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, BandwidthGraphData>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, BandwidthGraphData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, BandwidthGraphData>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, BandwidthGraphData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, BandwidthGraphData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, BandwidthGraphData>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, PluginLoader::ACTIVE_PLUGIN *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>>;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct vector<AppleVpnCertificate *, std::__1::allocator<AppleVpnCertificate *>> {
    struct AppleVpnCertificate **__begin_;
    struct AppleVpnCertificate **__end_;
    struct __compressed_pair<AppleVpnCertificate **, std::__1::allocator<AppleVpnCertificate *>> {
        struct AppleVpnCertificate **__value_;
    } __end_cap_;
};

struct vector<AppleVpnConfig *, std::__1::allocator<AppleVpnConfig *>> {
    struct AppleVpnConfig **__begin_;
    struct AppleVpnConfig **__end_;
    struct __compressed_pair<AppleVpnConfig **, std::__1::allocator<AppleVpnConfig *>> {
        struct AppleVpnConfig **__value_;
    } __end_cap_;
};

struct vector<CertificateItems::CertificateItem, std::__1::allocator<CertificateItems::CertificateItem>> {
    struct CertificateItem *__begin_;
    struct CertificateItem *__end_;
    struct __compressed_pair<CertificateItems::CertificateItem *, std::__1::allocator<CertificateItems::CertificateItem>> {
        struct CertificateItem *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> *_field1;
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>*, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> *_field1;
    } _field3;
};

struct x509_st;

#pragma mark Typedef'd Structures

// Template types
typedef struct auto_cfref<__CFDictionary *> {
    struct __CFDictionary *_field1;
} auto_cfref_218efd67;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct list<AppleVpnConfig *, std::__1::allocator<AppleVpnConfig *>> {
    struct __list_node_base<AppleVpnConfig *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<AppleVpnConfig *, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_10bdc403;

typedef struct list<std::__1::pair<long long, const __CFString *>, std::__1::allocator<std::__1::pair<long long, const __CFString *>>> {
    struct __list_node_base<std::__1::pair<long long, const __CFString *>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<long long, const __CFString *>, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_69940b9a;

typedef struct vector<AppleVpnCertificate *, std::__1::allocator<AppleVpnCertificate *>> {
    struct AppleVpnCertificate **__begin_;
    struct AppleVpnCertificate **__end_;
    struct __compressed_pair<AppleVpnCertificate **, std::__1::allocator<AppleVpnCertificate *>> {
        struct AppleVpnCertificate **__value_;
    } __end_cap_;
} vector_ee50fed1;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
} vector_9492931a;

#pragma mark -

//
// File: /Users/tareqdandachi/tweaks/dumb-anyconnect/dump/Payload/AnyConnect.app/AnyConnect
// UUID: 16616DB1-675E-366E-A3AA-8F3EE4BF5BDE
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 10.0.0
//                    SDK version: 13.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Users/tareqdandachi/tweaks/dumb-anyconnect/dump/Payload/AnyConnect.app/Frameworks
//

@protocol ActionSelectionDelegate <NSObject>
- (void)actionSelectionUpdate:(ActionSelectionViewController *)arg1;
@end

@protocol ActiveConfigListenerProtocol <NSObject>
- (void)reloadVpnConnections;
@end

@protocol ActiveConfigSourceProtocol <NSObject>
- (void)unRegisterActiveConfigListener;
- (void)registerActiveConfigListener:(id <ActiveConfigListenerProtocol>)arg1;
@end

@protocol AppFrameworkInteractionProtocol <NSObject>
- (void)CertSignHashReceivedCB:(NSDictionary *)arg1;
- (void)SCEPEnrollExitReceived;
- (void)SCEPEnrollStartReceived;
- (void)FIPSDisableStopReceived:(_Bool)arg1;
- (void)FIPSDisableStartReceived;
- (void)FIPSEnableStopReceived:(_Bool)arg1;
- (void)FIPSEnableStartReceived;
- (void)importCertDataReplyReceived:(struct __CFString *)arg1;
- (void)importProfileReplyReceived:(struct __CFString *)arg1;
- (void)localizationRemovalReplyReceived:(_Bool)arg1;
- (void)downloadLocalizationReceived:(NSDictionary *)arg1;
- (void)deleteProfileReplyReceived:(_Bool)arg1;
- (void)importHostsReceived:(NSArray *)arg1;
- (void)deleteCertsReplyReceived:(struct __CFString *)arg1;
- (void)getUserCertsReceived:(NSDictionary *)arg1;
- (void)getServerCertsReceived:(NSDictionary *)arg1;
- (void)logGetReplyReceived:(NSDictionary *)arg1 configId:(NSString *)arg2;
- (void)logEnableReplyReceived:(_Bool)arg1;
- (void)messageNotifyReceived:(NSString *)arg1 messageText:(NSString *)arg2 sensitive:(_Bool)arg3;
- (void)stateNotifyReceived:(NSDictionary *)arg1 configId:(NSString *)arg2;
- (void)statsRequestReplyReceived:(NSDictionary *)arg1 configId:(NSString *)arg2;
- (void)certificateTrustPromptReceived:(NSDictionary *)arg1;
- (void)bannerPromptReceived:(NSString *)arg1;
- (void)userPromptReceived:(NSDictionary *)arg1;
- (void)handshakeReplyReceived:(NSDictionary *)arg1 configId:(NSString *)arg2;
- (void)errorProcessingNotification:(int)arg1 description:(NSString *)arg2;
- (void)errorProcessingMessage:(int)arg1 description:(NSString *)arg2;
@end

@protocol AppleVpnConfigsProtocol <NSObject>
- (void)importHostsFromProfileCompleted;
- (void)perAppConfigChanged:(int)arg1;
- (void)configurationChanged:(NSString *)arg1 legacyStatus:(int)arg2;
- (void)activeConfigUpdated;
- (void)configListUpdated;
@end

@protocol ApplicationNotificationProtocol <NSObject>
- (void)handleTerminate;
- (void)handleEnterBackground;
- (void)handleResignActive;
- (void)handleBecomeActive;
- (void)handleDidFinishLaunching;
@end

@protocol CertDeletionListenerProtocol <NSObject>
- (void)HandleCertificateImportReply:(NSString *)arg1;
- (void)HandleCertificatesDeleteReply:(NSString *)arg1;
- (void)HandleGetUserCertsReplyWithError:(NSString *)arg1;
- (void)HandleGetServerCertsReplyWithError:(NSString *)arg1;
- (void)HandleGetUserCertsReplyFromPlugins:(NSDictionary *)arg1;
- (void)HandleGetServerCertsReplyFromPlugins:(NSDictionary *)arg1;
@end

@protocol CertDeletionSourceProtocol <NSObject>
- (void)ImportPKCS12Cert:(NSData *)arg1;
- (void)DeleteCertificates:(NSDictionary *)arg1;
- (void)GetUserCertificates;
- (void)GetServerCertificates;
- (void)UnregisterCertDeletionController;
- (void)RegisterCertDeletionController:(id <CertDeletionListenerProtocol>)arg1;
@end

@protocol CertDetailsDelegate <NSObject>
- (void)dismissCertDetailViewAndAcceptCert:(_Bool)arg1 andImportCert:(_Bool)arg2;
@end

@protocol CertSelectionDelegate <NSObject>

@optional
- (void)certSelectionDismiss;
- (void)certSelectionSave:(struct AppleVpnCertificate *)arg1 certPolicy:(int)arg2;
@end

@protocol ConfigurationEditorDelegate <NSObject>
- (void)configurationEditorDismiss;
@end

@protocol CredentialPromptsDelegate <NSObject>
- (void)credentialPromptsViewDismiss;
- (void)credentialPromptsReply:(CredentialPromptsViewController *)arg1;
@end

@protocol CredentialPromptsGroupDelegate <NSObject>
- (void)credentialPromptsGroupSave:(CredentialPromptsGroupViewController *)arg1;
@end

@protocol CustomWebViewControllerDelegate <NSObject>

@optional
- (void)dismissViewWithLeftButtonClick;
- (void)dismissViewWithRightButtonClick;
@end

@protocol DiagnosticsListenerProtocol <NSObject>
- (void)HandleLogStateChange:(_Bool)arg1;
@end

@protocol DiagnosticsSourceProtocol <NSObject>
- (_Bool)GetLoggingState;
- (void)ClearLogs;
- (NSDictionary *)CopyAllVpnLogs;
- (NSString *)CopyLogTextForType:(int)arg1;
- (void)EnableLog:(_Bool)arg1;
- (void)UnregisterDiagnosticsController;
- (void)RegisterDiagnosticsController:(id <DiagnosticsListenerProtocol>)arg1;
@end

@protocol DomainListDelegate <NSObject>
- (void)SetDomainLists:(NSMutableArray *)arg1;
@end

@protocol EvaluateConnectionDelegate <NSObject>
- (void)evaluateConnectionUpdate:(EvaluateConnectionViewController *)arg1;
@end

@protocol FileDownloaderDelegate <NSObject>
- (void)DownloadCompleteCB:(_Bool)arg1 receivedData:(NSData *)arg2;
@end

@protocol HUDProgressViewDelegate <NSObject>

@optional
- (void)hudProgressViewTimedOut;
@end

@protocol HomeViewSourceProtocol
- (NSArray *)getPerAppConfigIds;
- (void)handleUserActivity;
- (void)setConnectionTimedOut:(_Bool)arg1;
- (void)showAboutInDetailView;
- (void)showSettingsInDetailView;
- (void)setStatusText:(NSString *)arg1;
- (_Bool)isSamlWebViewDisplayed;
- (_Bool)isCredentialPromptDisplayed;
- (void)updatePerAppVisualState:(NSString *)arg1 configId:(NSString *)arg2;
- (void)updateVisualState;
- (void)updateVisualState:(int)arg1;
- (void)certificateTrustPromptReceived:(NSDictionary *)arg1;
- (void)bannerPromptReceived:(NSString *)arg1;
- (void)userPromptReceived:(NSDictionary *)arg1;
- (void)refreshPerAppVpnView;
- (void)refreshPrimaryVpnView;
- (void)enableSwitchView;
- (void)dismissSpinner;
- (void)displaySpinner;
- (void)initState;
@end

@protocol IOSBandWidthGraphViewDataSource
- (long long)LeadingTimeAxisTick:(IOSBandwidthGraphView *)arg1;
- (long long)MaxDataSize:(IOSBandwidthGraphView *)arg1;
- (long long)MaxValueForGraph:(IOSBandwidthGraphView *)arg1;
- (long long)MinValueForGraph:(IOSBandwidthGraphView *)arg1;
- (const list_69940b9a *)ValuesForGraph:(IOSBandwidthGraphView *)arg1;
- (NSString *)LabelForGraph:(IOSBandwidthGraphView *)arg1;
- (_Bool)GradientColors:(IOSBandwidthGraphView *)arg1 gradientStartColor:(id *)arg2 gradientEndColor:(id *)arg3;
- (UIColor *)PatternColor:(IOSBandwidthGraphView *)arg1;
- (UIColor *)LineColor:(IOSBandwidthGraphView *)arg1;
@end

@protocol InfoViewControllerDelegate <NSObject>
- (void)InfoViewControllerDidFinish:(InfoViewController *)arg1;
@end

@protocol InterfaceSelectionDelegate <NSObject>
- (void)interfaceSelectionUpdate:(InterfaceSelectionViewController *)arg1;
@end

@protocol KeyboardListenerProtocol
- (void)keyboardWillHide;
- (void)keyboardDidShow;
@end

@protocol KeyboardSourceProtocol <NSObject>
- (_Bool)isKeyboardVisible;
- (double)calculateHeightToAdjust:(UIView *)arg1;
- (void)removeKeyboardListener:(id <KeyboardListenerProtocol>)arg1;
- (void)addKeyboardListener:(id <KeyboardListenerProtocol>)arg1;
@end

@protocol LocalizationListenerProtocol <NSObject>
- (void)LocalizationChanged;
@end

@protocol LogDisplayListenerProtocol <NSObject>
- (void)UpdateDisplayWithNewCount:(long long)arg1;
@end

@protocol LogDisplaySourceProtocol <NSObject>
- (NSString *)CopyLogTextForType:(int)arg1 row:(long long)arg2;
- (long long)GetLogCountForType:(int)arg1;
- (void)UnregisterLogDisplayController:(id <LogDisplayListenerProtocol>)arg1 type:(int)arg2;
- (void)RegisterLogDisplayController:(id <LogDisplayListenerProtocol>)arg1 type:(int)arg2;
@end

@protocol LogUpdateProtocol <NSObject>
- (void)UpdateLogCount:(int)arg1 forType:(int)arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(long long)arg2 error:(NSError *)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol OnDemandRulesDelegate <NSObject>
- (void)SetOnDemandRules:(NSMutableArray *)arg1;
@end

@protocol ProfileListenerProtocol <NSObject>
- (void)ProfileChanged;
@end

@protocol ProtocolSelectionDelegate <NSObject>
- (void)protocolSelectionSave:(NSString *)arg1;
@end

@protocol RuleDetailsDelegate <NSObject>
- (void)ruleDetailsUpdate:(RuleDetailsViewController *)arg1;
@end

@protocol SAMLWebViewDelegate <NSObject>
- (void)samlWebViewCompleted:(NSDictionary *)arg1;
- (void)samlWebViewClosed:(_Bool)arg1;
@end

@protocol SettingsChangeListenerProtocol <NSObject>

@optional
- (void)AdvancedSettingsChanged;
- (void)LangChanged;
@end

@protocol StatisticsListenerProtocol <NSObject>
- (void)statisticsRequestTimeout;
- (void)statisticsUpdated:(NSDictionary *)arg1;

@optional
- (_Bool)isStatsForConfig:(NSString *)arg1;
- (void)graphDataUpdated;
@end

@protocol StatisticsSourceProtocol <NSObject>
- (void)setActiveVpnConfigId:(NSString *)arg1;
- (const struct BandwidthGraphData *)GetBytesReceivedGraphData:(NSString *)arg1;
- (const struct BandwidthGraphData *)GetBytesSentGraphData:(NSString *)arg1;
- (void)removeStatisticsListener:(id <StatisticsListenerProtocol>)arg1;
- (void)addStatisticsListener:(id <StatisticsListenerProtocol>)arg1;
- (void)requestStatisticsUpdate;
- (NSDictionary *)getCachedStatistics;
- (_Bool)canReceiveStatistics;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (void)presentationControllerDidAttemptToDismiss:(UIPresentationController *)arg1;
- (void)presentationControllerDidDismiss:(UIPresentationController *)arg1;
- (void)presentationControllerWillDismiss:(UIPresentationController *)arg1;
- (_Bool)presentationControllerShouldDismiss:(UIPresentationController *)arg1;
- (void)presentationController:(UIPresentationController *)arg1 willPresentWithAdaptiveStyle:(long long)arg2 transitionCoordinator:(id <UIViewControllerTransitionCoordinator>)arg3;
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1 traitCollection:(UITraitCollection *)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didDiscardSceneSessions:(NSSet *)arg2;
- (UISceneConfiguration *)application:(UIApplication *)arg1 configurationForConnectingSceneSession:(UISceneSession *)arg2 options:(UISceneConnectionOptions *)arg3;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISplitViewControllerDelegate

@optional
- (_Bool)splitViewController:(UISplitViewController *)arg1 shouldHideViewController:(UIViewController *)arg2 inOrientation:(long long)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 popoverController:(UIPopoverController *)arg2 willPresentViewController:(UIViewController *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willShowViewController:(UIViewController *)arg2 invalidatingBarButtonItem:(UIBarButtonItem *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willHideViewController:(UIViewController *)arg2 withBarButtonItem:(UIBarButtonItem *)arg3 forPopoverController:(UIPopoverController *)arg4;
- (long long)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)arg1;
- (unsigned long long)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)arg1;
- (UIViewController *)splitViewController:(UISplitViewController *)arg1 separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)arg2;
- (_Bool)splitViewController:(UISplitViewController *)arg1 collapseSecondaryViewController:(UIViewController *)arg2 ontoPrimaryViewController:(UIViewController *)arg3;
- (UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)arg1;
- (UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)arg1;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showDetailViewController:(UIViewController *)arg2 sender:(id)arg3;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showViewController:(UIViewController *)arg2 sender:(id)arg3;
- (long long)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)arg1;
- (void)splitViewController:(UISplitViewController *)arg1 willChangeToDisplayMode:(long long)arg2;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 willCommitMenuWithAnimator:(id <UIContextMenuInteractionCommitAnimating>)arg2;
- (void)tableView:(UITableView *)arg1 willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionCommitAnimating>)arg3;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UIContextMenuConfiguration *)tableView:(UITableView *)arg1 contextMenuConfigurationForRowAtIndexPath:(NSIndexPath *)arg2 point:(struct CGPoint)arg3;
- (void)tableViewDidEndMultipleSelectionInteraction:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldSpringLoadRowAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (void)textFieldDidChangeSelection:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol URIHandlerDelegate <NSObject>
- (void)URIHandlerUpdate:(URIHandlerViewController *)arg1;
@end

@protocol UntrustedCertBannerViewControllerDelegate <NSObject>
- (void)UntrustedCertBannerViewDismiss;
@end

@protocol UntrustedCertHandlerDelegate <NSObject>
- (void)finishedHandlingUntrustedCert:(_Bool)arg1 andImportCert:(_Bool)arg2;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 preferences:(WKWebpagePreferences *)arg3 decisionHandler:(void (^)(long long, WKWebpagePreferences *))arg4;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol WKUIDelegate <NSObject>

@optional
- (void)webView:(WKWebView *)arg1 contextMenuDidEndForElement:(WKContextMenuElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 contextMenuWillPresentForElement:(WKContextMenuElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 contextMenuForElement:(WKContextMenuElementInfo *)arg2 willCommitWithAnimator:(id <UIContextMenuInteractionCommitAnimating>)arg3;
- (void)webView:(WKWebView *)arg1 contextMenuConfigurationForElement:(WKContextMenuElementInfo *)arg2 completionHandler:(void (^)(UIContextMenuConfiguration *))arg3;
- (void)webView:(WKWebView *)arg1 commitPreviewingViewController:(UIViewController *)arg2;
- (UIViewController *)webView:(WKWebView *)arg1 previewingViewControllerForElement:(WKPreviewElementInfo *)arg2 defaultActions:(NSArray *)arg3;
- (_Bool)webView:(WKWebView *)arg1 shouldPreviewElement:(WKPreviewElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WKFrameInfo *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(WKWebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(WKWebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webViewDidClose:(WKWebView *)arg1;
- (WKWebView *)webView:(WKWebView *)arg1 createWebViewWithConfiguration:(WKWebViewConfiguration *)arg2 forNavigationAction:(WKNavigationAction *)arg3 windowFeatures:(WKWindowFeatures *)arg4;
@end

__attribute__((visibility("hidden")))
@interface AboutViewController : UIViewController <SettingsChangeListenerProtocol>
{
    UIWebView *copyrightWebView;
    UILabel *anyconnectLabel;
    UILabel *secureMobilityLabel;
    UIImageView *anyconnectAboutIcon;
    NSString *m_deviceId;
    NSString *m_colorHexStr;
}

@property(retain, nonatomic) UIImageView *anyconnectAboutIcon; // @synthesize anyconnectAboutIcon;
@property(retain, nonatomic) UILabel *secureMobilityLabel; // @synthesize secureMobilityLabel;
@property(retain, nonatomic) UILabel *anyconnectLabel; // @synthesize anyconnectLabel;
@property(retain, nonatomic) UIWebView *copyrightWebView; // @synthesize copyrightWebView;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)arg1;
- (void)refreshForFontChange;
- (void)applicationDidEnterForeground;
- (void)LangChanged;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)localizeUI;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)refreshDeviceID;
- (void)loadInfoText:(id)arg1;
- (void)themeUI;
- (id)getScrollView;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidAppear:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ActionSelectionViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, EvaluateConnectionDelegate, SettingsChangeListenerProtocol>
{
    UITableView *actionSelectionTableView;
    NSArray *m_actionParameters;
    id <ActionSelectionDelegate> actionSelectionDelegate;
    long long activeIndex;
    long long originalIndex;
    _Bool m_bChangeOccurred;
    _Bool m_bForeground;
    _Bool bCanEdit;
}

@property(nonatomic) _Bool bCanEdit; // @synthesize bCanEdit;
@property(nonatomic) long long originalIndex; // @synthesize originalIndex;
@property(nonatomic) long long activeIndex; // @synthesize activeIndex;
@property(nonatomic) __weak id <ActionSelectionDelegate> actionSelectionDelegate; // @synthesize actionSelectionDelegate;
@property(retain, nonatomic) NSArray *m_actionParameters; // @synthesize m_actionParameters;
@property(retain, nonatomic) UITableView *actionSelectionTableView; // @synthesize actionSelectionTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (void)evaluateConnectionUpdate:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)activeRowToAction:(long long)arg1;
- (long long)actionToActiveRow:(id)arg1;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SAMLWebViewController : UIViewController <WKNavigationDelegate, WKUIDelegate, UIAdaptivePresentationControllerDelegate>
{
    NSString *m_samlUrl;
    NSString *m_samlFinalUrl;
    NSString *m_samlTokenCookieName;
    NSString *m_samlErrorCookieName;
    NSString *m_samlUserAgent;
    _Bool bTunnelGroup;
    WKWebView *wkWebView;
    UIView *webContentView;
    UIBarButtonItem *backButton;
    UIActivityIndicatorView *spinView;
    UILabel *spinText;
    id <SAMLWebViewDelegate> samlDelegate;
    NSMutableDictionary *userPromptDict;
    UIToolbar *_toolbar;
    UIBarButtonItem *_forwardButton;
}

@property(nonatomic) __weak UIBarButtonItem *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(nonatomic) __weak UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) NSMutableDictionary *userPromptDict; // @synthesize userPromptDict;
@property(nonatomic) __weak id <SAMLWebViewDelegate> samlDelegate; // @synthesize samlDelegate;
@property(nonatomic) _Bool bTunnelGroup; // @synthesize bTunnelGroup;
@property(nonatomic) __weak UILabel *spinText; // @synthesize spinText;
@property(nonatomic) __weak UIActivityIndicatorView *spinView; // @synthesize spinView;
@property(nonatomic) __weak UIBarButtonItem *backButton; // @synthesize backButton;
@property(nonatomic) __weak UIView *webContentView; // @synthesize webContentView;
@property(retain, nonatomic) WKWebView *wkWebView; // @synthesize wkWebView;
- (void).cxx_destruct;
- (void)presentationControllerDidDismiss:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)samlWebviewlNavigationCompleted;
- (void)samlCompleted:(id)arg1;
- (_Bool)isSamlTokenCookieRetrieved;
- (void)setSamlTokenCookie:(id)arg1;
- (void)loadWebPage;
- (void)cancelConnection;
- (void)done;
- (void)localizeUI;
- (void)themeUI;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface AdvancedConfigurationEditorViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, CertSelectionDelegate, UITextFieldDelegate, DomainListDelegate, OnDemandRulesDelegate, InfoViewControllerDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol, ProtocolSelectionDelegate>
{
    UITableView *advancedConfigTableView;
    UIButton *infoButton;
    IOSActiveVpnConfiguration *m_activeConfiguration;
    NSMutableArray *m_advancedConfigVisibleRows;
    NSArray *m_advancedConfigRowLabels;
    NSArray *m_advancedConfigRowTypes;
    NSMutableArray *m_advancedProtocolSettingVisibleRows;
    NSArray *m_advancedProtocolSettingRowLabels;
    NSArray *m_advancedProtocolSettingRowTypes;
    UITextField *m_activeTextField;
    _Bool m_bKeyboardVisible;
    double m_frameWidth;
}

@property(retain, nonatomic) UIButton *infoButton; // @synthesize infoButton;
@property(retain, nonatomic) UITableView *advancedConfigTableView; // @synthesize advancedConfigTableView;
- (void).cxx_destruct;
- (void)showInfo;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (void)protocolSelectionSave:(id)arg1;
- (void)LangChanged;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)SetOnDemandRules:(id)arg1;
- (void)SetDomainLists:(id)arg1;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)certSelectionSave:(struct AppleVpnCertificate *)arg1 certPolicy:(int)arg2;
- (void)localizeUI;
- (void)themeUI;
- (void)handleSwitchToggle:(id)arg1;
- (id)rowTypeToString:(int)arg1;
- (id)createConfigCellOfType:(int)arg1 fromTable:(id)arg2 withIndexPath:(id)arg3;
- (_Bool)syncVisibleRows;
- (void)initTableFooter;
- (void)dealloc;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)initWithConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface AppRulesViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *appRulesTableView;
    UILabel *noAppRulesLabel;
    NSArray *m_appRules;
}

@property(retain, nonatomic) NSArray *appRules; // @synthesize appRules=m_appRules;
@property(retain, nonatomic) UILabel *noAppRulesLabel; // @synthesize noAppRulesLabel;
@property(retain, nonatomic) UITableView *appRulesTableView; // @synthesize appRulesTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CertDetailsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, KeyboardListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *certTableView;
    struct AppleVpnCertificate *m_pCert;
    _Bool m_bAllowImport;
    NSMutableArray *tableData;
    _Bool m_untrustedServerCert;
    NSArray *m_certConfirmReasons;
    id <CertDetailsDelegate> m_delegate;
}

@property(retain, nonatomic) NSArray *certConfirmReasons; // @synthesize certConfirmReasons=m_certConfirmReasons;
@property(retain, nonatomic) UITableView *certTableView; // @synthesize certTableView;
@property(retain, nonatomic) NSMutableArray *tableData; // @synthesize tableData;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)dealloc;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)initTableHeader;
- (void)localizeUI;
- (void)themeUI;
- (void)certDetailsUserAccept:(_Bool)arg1 andImportCert:(_Bool)arg2;
- (void)onBackClicked;
- (void)onImport;
- (void)onContinue;
- (id)initWithCertificate:(struct AppleVpnCertificate *)arg1 delegate:(id)arg2;
- (id)initWithUntrustedServerCertificate:(struct AppleVpnCertificate *)arg1 withAllowImport:(_Bool)arg2 confirmReasons:(id)arg3 delegate:(id)arg4;
- (void)initTableData;
- (void)initDistNameRows:(id)arg1 withData:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CertSelectionViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, SettingsChangeListenerProtocol>
{
    UITableView *certTableView;
    id <CertSelectionDelegate> m_certSelectionDelegate;
    NSData *m_persistentRef;
    NSIndexPath *m_oldIndexPath;
    long long m_originalCertIndex;
    struct AppleVpnCertificateList m_certList;
    _Bool m_bReadOnly;
    int m_certPolicy;
    NSMutableArray *m_displayedCertPolicies;
    NSString *m_headerText;
    double m_policyRowHeight;
    double m_certRowHeight;
}

@property(retain, nonatomic) NSString *headerText; // @synthesize headerText=m_headerText;
@property(retain, nonatomic) UITableView *certTableView; // @synthesize certTableView;
@property(retain, nonatomic) NSIndexPath *m_oldIndexPath; // @synthesize m_oldIndexPath;
@property(retain, nonatomic) NSData *m_persistentRef; // @synthesize m_persistentRef;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)refreshUI;
- (void)localizeUI;
- (void)themeUI;
- (void)initTableHeaderAndFooter;
- (void)setCellTextColor:(id)arg1 highlight:(_Bool)arg2;
- (void)setCellTextAndDesc:(id)arg1 policyText:(id)arg2 policyDescription:(id)arg3;
- (void)didSelectCertRowAtIndexPath:(id)arg1 withIndexPath:(id)arg2;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidUnload:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithPersistentRef:(struct __CFData *)arg1 delegate:(id)arg2 readOnly:(_Bool)arg3 certPolicy:(int)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ComponentTitleView : UIView
{
    UIImageView *componentImage;
    UILabel *componentTitle;
}

@property(retain, nonatomic) UILabel *componentTitle; // @synthesize componentTitle;
@property(retain, nonatomic) UIImageView *componentImage; // @synthesize componentImage;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface ConfigurationEditorViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, UITextFieldDelegate, InfoViewControllerDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *configTableView;
    UIButton *infoButton;
    id <ConfigurationEditorDelegate> m_configEditorDelegate;
    IOSActiveVpnConfiguration *activeVpnConfiguration;
    _Bool m_bKeyboardVisible;
    UITextField *m_activeTextField;
    UIAlertController *m_deleteVpnAlert;
    NSMutableArray *m_visibleTextFields;
}

@property(retain, nonatomic) UIButton *infoButton; // @synthesize infoButton;
@property(readonly, nonatomic) IOSActiveVpnConfiguration *activeVpnConfiguration; // @synthesize activeVpnConfiguration;
@property(retain, nonatomic) UITableView *configTableView; // @synthesize configTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)showInfo;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)textFieldDidChange:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)canEnableSaveButton;
- (void)localizeUI;
- (void)themeUI;
- (void)deleteConfig:(_Bool)arg1;
- (long long)validateVpnConnection;
- (void)deleteVPN:(id)arg1;
- (void)save;
- (void)cancel;
- (void)initTableHeaderAndFooter;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)didReceiveMemoryWarning;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)initWithConfigName:(id)arg1 vpnConfig:(struct AppleVpnConfig *)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CredentialPromptsGroupViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *credentialPromptsGroupTableView;
    id <CredentialPromptsGroupDelegate> credPromptsGroupDelegate;
    NSArray *userGroups;
    NSString *defaultValue;
    NSString *promptName;
    int credPromptsTableRow;
    _Bool bGroup;
    unsigned long long originalIndex;
    unsigned long long activeIndex;
    NSIndexPath *oldIndexPath;
}

@property(retain, nonatomic) NSIndexPath *oldIndexPath; // @synthesize oldIndexPath;
@property(nonatomic) unsigned long long activeIndex; // @synthesize activeIndex;
@property(nonatomic) unsigned long long originalIndex; // @synthesize originalIndex;
@property(nonatomic) int credPromptsTableRow; // @synthesize credPromptsTableRow;
@property(nonatomic) _Bool bGroup; // @synthesize bGroup;
@property(retain, nonatomic) NSString *promptName; // @synthesize promptName;
@property(retain, nonatomic) NSString *defaultValue; // @synthesize defaultValue;
@property(retain, nonatomic) NSArray *userGroups; // @synthesize userGroups;
@property(nonatomic) __weak id <CredentialPromptsGroupDelegate> credPromptsGroupDelegate; // @synthesize credPromptsGroupDelegate;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CredentialPromptsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, CredentialPromptsGroupDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol, UIAdaptivePresentationControllerDelegate>
{
    UITableView *credentialPromptsTableView;
    UIActivityIndicatorView *activityIndicator;
    UILabel *activityIndicatorLabel;
    NSMutableDictionary *userPromptDict;
    NSMutableDictionary *m_inputControlMap;
    NSMutableDictionary *m_guiTypeMap;
    NSMutableArray *m_visiblePromptEntries;
    NSMutableArray *m_visibleTextFields;
    NSString *m_statusMessage;
    NSString *m_bannerMessage;
    _Bool m_bCertEnroll;
    _Bool m_bGetNewToken;
    _Bool m_bFirstLoad;
    UITextField *m_activeTextField;
    _Bool m_bKeyboardVisible;
    _Bool dismissModalViewFlag;
    UITextField *m_usernameTextField;
    UITextField *m_secondaryUsernameTextField;
    id <CredentialPromptsDelegate> credPromptsDelegate;
}

@property(retain, nonatomic) UITextField *m_secondaryUsernameTextField; // @synthesize m_secondaryUsernameTextField;
@property(retain, nonatomic) UITextField *m_usernameTextField; // @synthesize m_usernameTextField;
@property(retain, nonatomic) UILabel *activityIndicatorLabel; // @synthesize activityIndicatorLabel;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) UITableView *credentialPromptsTableView; // @synthesize credentialPromptsTableView;
@property(nonatomic) _Bool dismissModalViewFlag; // @synthesize dismissModalViewFlag;
@property(nonatomic) __weak id <CredentialPromptsDelegate> credPromptsDelegate; // @synthesize credPromptsDelegate;
@property(retain, nonatomic) NSMutableDictionary *userPromptDict; // @synthesize userPromptDict;
- (void).cxx_destruct;
- (void)presentationControllerDidDismiss:(id)arg1;
- (void)LangChanged;
- (void)credentialPromptsGroupSave:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)dealloc;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)processRightBarButton;
- (void)localizeUI;
- (void)themeUI;
- (void)initTableHeaderAndFooter;
- (void)scrollToActiveTextField;
- (void)getNewToken:(id)arg1;
- (void)certEnroll:(id)arg1;
- (void)cancel;
- (void)connect;
- (void)updateGroup;
- (void)gatherUserPrompt:(id)arg1;
- (void)gatherUserPrompts;
- (void)clearUserPrompts;
- (void)hideSpinnerView;
- (void)showSpinnerViewWithLabel:(id)arg1;
- (_Bool)processUserPrompts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CustomCellWithLabelAndTextView : UITableViewCell
{
    UILabel *label;
    UITextField *textField;
}

@property(retain, nonatomic) UITextField *textField; // @synthesize textField;
@property(retain, nonatomic) UILabel *label; // @synthesize label;
- (void).cxx_destruct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CustomCellWithTwoLabels : UITableViewCell
{
    UILabel *leftLabel;
    UILabel *rightLabel;
}

@property(retain, nonatomic) UILabel *rightLabel; // @synthesize rightLabel;
@property(retain, nonatomic) UILabel *leftLabel; // @synthesize leftLabel;
- (void).cxx_destruct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CustomWebViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol, InfoViewControllerDelegate>
{
    UITableView *tableViewWithWebView;
    NSString *m_viewTitle;
    NSString *m_banner;
    NSString *m_message;
    NSString *m_leftButtonName;
    NSString *m_leftButtonTitle;
    NSString *m_rightButtonName;
    NSString *m_rightButtonTitle;
    double m_fontSize;
    _Bool m_bShouldLaunchBrowserOnURLClicks;
    id <CustomWebViewControllerDelegate> m_delegate;
    double _fontSize;
}

@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(nonatomic) _Bool shouldLaunchBrowserOnURLClicks; // @synthesize shouldLaunchBrowserOnURLClicks=m_bShouldLaunchBrowserOnURLClicks;
@property(retain, nonatomic) NSString *rightButtonTitle; // @synthesize rightButtonTitle=m_rightButtonTitle;
@property(retain, nonatomic) NSString *rightButtonName; // @synthesize rightButtonName=m_rightButtonName;
@property(retain, nonatomic) NSString *leftButtonTitle; // @synthesize leftButtonTitle=m_leftButtonTitle;
@property(retain, nonatomic) NSString *leftButtonName; // @synthesize leftButtonName=m_leftButtonName;
@property(retain, nonatomic) NSString *message; // @synthesize message=m_message;
@property(retain, nonatomic) NSString *banner; // @synthesize banner=m_banner;
@property(retain, nonatomic) NSString *viewTitle; // @synthesize viewTitle=m_viewTitle;
@property(retain, nonatomic) UITableView *tableViewWithWebView; // @synthesize tableViewWithWebView;
- (void).cxx_destruct;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (double)textViewHeightForText:(id)arg1 andWidth:(double)arg2;
- (void)onRightButtonClicked;
- (void)onLeftButtonClicked;
- (void)localizeUI;
- (void)themeUI;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface DiagnosticsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, DiagnosticsListenerProtocol, CertSelectionDelegate, SettingsChangeListenerProtocol, CustomWebViewControllerDelegate>
{
    UITableView *logTableView;
    UISwitch *switchView;
    id <DiagnosticsSourceProtocol> m_diagnosticsSourceController;
    id <DismissViewControllerDelegate> m_dismissViewControllerDelegate;
    UIBarButtonItem *m_exitButton;
}

@property(nonatomic) __weak id <DismissViewControllerDelegate> dismissViewControllerDelegate; // @synthesize dismissViewControllerDelegate=m_dismissViewControllerDelegate;
@property(retain, nonatomic) UITableView *logTableView; // @synthesize logTableView;
@property(retain, nonatomic) UISwitch *switchView; // @synthesize switchView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)setOnWrapper:(_Bool)arg1 animated:(_Bool)arg2;
- (void)localizeUI;
- (void)themeUI;
- (void)HandleLogStateChange:(_Bool)arg1;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)switchAction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface DomainListViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, InfoViewControllerDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *m_tableView;
    UIButton *infoButton;
    id <DomainListDelegate> domainListDelegate;
    NSMutableArray *domainLists;
    NSMutableArray *savedDomainLists;
    NSArray *m_sectionTitles;
    UITextField *m_activeTextField;
    NSIndexPath *m_activeIndexPath;
    UITextField *m_lastModifiedTextField;
    UIBarButtonItem *m_editButton;
    UIBarButtonItem *m_saveButton;
    UIBarButtonItem *m_cancelButton;
    _Bool m_bKeyboardVisible;
    _Bool readOnly;
    double m_frameWidth;
    NSMutableArray *m_kvoList;
}

@property(retain, nonatomic) UIButton *infoButton; // @synthesize infoButton;
@property(retain, nonatomic) UITextField *m_lastModifiedTextField; // @synthesize m_lastModifiedTextField;
@property(retain, nonatomic) NSIndexPath *m_activeIndexPath; // @synthesize m_activeIndexPath;
@property(retain, nonatomic) UITextField *m_activeTextField; // @synthesize m_activeTextField;
@property(nonatomic) _Bool readOnly; // @synthesize readOnly;
@property(nonatomic) __weak id <DomainListDelegate> domainListDelegate; // @synthesize domainListDelegate;
@property(retain, nonatomic) NSMutableArray *domainLists; // @synthesize domainLists;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)showInfo;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)dealloc;
- (void)viewDidLayoutSubviews;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)initTableFooter;
- (void)addRowAtIndexPath:(id)arg1;
- (void)doCancel;
- (void)doSave;
- (void)doEdit;
- (void)copyArrayOfArrays:(id)arg1 intoArray:(id *)arg2;
- (void)scrollToActiveTextField;
- (_Bool)validateDomains;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EmailLogsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UITextViewDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol, UIActionSheetDelegate, MFMailComposeViewControllerDelegate>
{
    UITableView *emailBodyTable;
    NSString *m_problemText;
    NSString *m_stepsToReproduceText;
    UITextView *m_useForDismissKeyboard;
    struct CGSize m_frameSize;
}

@property(retain, nonatomic) NSString *stepsToReproduceText; // @synthesize stepsToReproduceText=m_stepsToReproduceText;
@property(retain, nonatomic) NSString *problemText; // @synthesize problemText=m_problemText;
@property(retain, nonatomic) UITableView *emailBodyTable; // @synthesize emailBodyTable;
- (void).cxx_destruct;
- (id)parseVpnConfigInfo:(struct AppleVpnConfig *)arg1;
- (void)showLogCollectionError;
- (void)onEmailLogs:(_Bool)arg1;
- (void)onShareLogs;
- (id)getMessageBodyWithCiscoRecipient;
- (id)getMessageBody;
- (id)getShortSubject;
- (id)getSubject;
- (id)getLogZipFile;
- (void)sendEmail;
- (_Bool)canEnableSendButton;
- (void)cancel;
- (void)localizeUI;
- (void)themeUI;
- (void)initTableHeader;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)LangChanged;
- (void)textViewDidChange:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EvaluateConnectionViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *evaluateConnectionTableView;
    NSArray *m_actionParameters;
    _Bool m_bAdd;
    _Bool m_bCanEdit;
    NSMutableArray *m_sectionsMutableArray;
    NSMutableArray *m_neverConnectMutableArray;
    NSMutableArray *m_ifNeededMutableArray;
    NSMutableArray *m_DNSServerMutableArray;
    UITextField *m_activeTextField;
    NSIndexPath *m_activeIndexPath;
    id <EvaluateConnectionDelegate> evaluateConnectionDelegate;
    _Bool m_bKeyboardVisible;
    _Bool m_bChangeOccurred;
    UIBarButtonItem *m_editButton;
    UIBarButtonItem *m_doneButton;
    UIBarButtonItem *m_cancelButton;
    NSString *m_URLProbeTFText;
}

@property(retain, nonatomic) NSIndexPath *m_activeIndexPath; // @synthesize m_activeIndexPath;
@property(retain, nonatomic) UITextField *m_activeTextField; // @synthesize m_activeTextField;
@property(retain, nonatomic) NSString *m_URLProbeTFText; // @synthesize m_URLProbeTFText;
@property(nonatomic) __weak id <EvaluateConnectionDelegate> evaluateConnectionDelegate; // @synthesize evaluateConnectionDelegate;
@property(nonatomic) _Bool m_bCanEdit; // @synthesize m_bCanEdit;
@property(nonatomic) _Bool m_bAdd; // @synthesize m_bAdd;
@property(retain, nonatomic) NSArray *m_actionParameters; // @synthesize m_actionParameters;
@property(retain, nonatomic) UITableView *evaluateConnectionTableView; // @synthesize evaluateConnectionTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)sectionTitle:(long long)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)saveTextChange:(id)arg1;
- (void)deleteRowAtIndexPath:(id)arg1;
- (void)addRowAtIndexPath:(id)arg1;
- (id)cellForRowAtIndexPathEditMode:(id)arg1;
- (void)scrollToActiveTextField;
- (void)doCancel;
- (void)doDone;
- (void)doEdit;
- (void)initializeEdit;
- (void)buildSectionsArray;
- (_Bool)validateDomain;
- (void)reportError:(id)arg1 indexPath:(id)arg2 cellTag:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface HomeViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, CredentialPromptsDelegate, UntrustedCertHandlerDelegate, HomeViewSourceProtocol, UntrustedCertBannerViewControllerDelegate, ApplicationNotificationProtocol, SettingsChangeListenerProtocol, ConfigurationEditorDelegate, SAMLWebViewDelegate>
{
    UITableView *componentsTableView;
    UISwitch *switchView;
    UIActivityIndicatorView *spinView;
    UIAlertController *m_bannerAlert;
    NSIndexPath *oldIndexPath;
    NSString *currentStatusText;
    NSDictionary *m_untrustedCertInfo;
    CredentialPromptsViewController *m_credentialPromptsViewController;
    SAMLWebViewController *m_samlWebViewController;
    UntrustedCertHandler *m_untrustedCertHandler;
    _Bool m_bPoppingView;
    _Bool m_bPendingCredPrompts;
    NSDictionary *pendingCredPromptsDict;
    IOSAnyConnectApplicationMgr *m_appMgr;
    _Bool m_isConnectionTimedOut;
    UIImageView *m_ciscoLogoImageView;
    _Bool m_bDonateShortcut;
    _Bool m_bUserInteractionNeeded;
    NSUserActivity *m_userActivity;
    ComponentTitleView *m_vpnHeader;
    ComponentTitleView *m_genHeader;
    ComponentTitleView *m_perAppHeader;
    NSMutableArray *m_perAppConfigsData;
}

@property(retain, nonatomic) UntrustedCertHandler *untrustedCertHandler; // @synthesize untrustedCertHandler=m_untrustedCertHandler;
@property(retain, nonatomic) NSDictionary *untrustedCertInfo; // @synthesize untrustedCertInfo=m_untrustedCertInfo;
@property(retain, nonatomic) UITableView *componentsTableView; // @synthesize componentsTableView;
@property(retain, nonatomic) UIActivityIndicatorView *spinView; // @synthesize spinView;
@property(retain, nonatomic) NSDictionary *pendingCredPromptsDict; // @synthesize pendingCredPromptsDict;
@property(retain, nonatomic) NSString *currentStatusText; // @synthesize currentStatusText;
@property(retain, nonatomic) NSIndexPath *oldIndexPath; // @synthesize oldIndexPath;
@property(retain, nonatomic) UISwitch *switchView; // @synthesize switchView;
- (void).cxx_destruct;
- (void)UntrustedCertBannerViewDismiss;
- (void)finishedHandlingUntrustedCert:(_Bool)arg1 andImportCert:(_Bool)arg2;
- (void)configurationEditorDismiss;
- (void)LangChanged;
- (void)handleTerminate;
- (void)handleEnterBackground;
- (void)handleBecomeActive;
- (void)handleResignActive;
- (void)handleDidFinishLaunching;
- (void)setConnectionTimedOut:(_Bool)arg1;
- (void)showAboutInDetailView;
- (void)showSettingsInDetailView;
- (void)setStatusText:(id)arg1;
- (_Bool)isSamlWebViewDisplayed;
- (_Bool)isCredentialPromptDisplayed;
- (void)updatePerAppVisualState:(id)arg1 configId:(id)arg2;
- (void)updateVisualState;
- (void)updateVisualState:(int)arg1;
- (void)certificateTrustPromptReceived:(id)arg1;
- (void)bannerPromptReceived:(id)arg1;
- (void)userPromptReceived:(id)arg1;
- (_Bool)shouldPresentWebView:(id)arg1;
- (_Bool)shouldPresentWebViewOnly:(id)arg1;
- (_Bool)prefillUserPrompt:(id)arg1 updateGroup:(_Bool *)arg2;
- (void)refreshPerAppVpnView;
- (void)refreshPrimaryVpnView;
- (void)enableSwitchView;
- (void)dismissSpinner;
- (void)displaySpinner;
- (void)initState;
- (void)samlWebViewCompleted:(id)arg1;
- (void)samlWebViewClosed:(_Bool)arg1;
- (void)credentialPromptsViewDismiss;
- (void)credentialPromptsReply:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)presentWebview:(id)arg1 bTunnelGroup:(_Bool)arg2;
- (void)presentCredentialView:(id)arg1;
- (void)updateAnyConnectVpnCell:(id)arg1;
- (void)updateVpnConnectionCell:(id)arg1;
- (void)updatePerAppVPNSection;
- (id)getPerAppConfigIds;
- (void)reloadTableData;
- (_Bool)rowInGeneralSection:(id)arg1;
- (id)getComponentTitleViewWith:(id)arg1 andTitle:(id)arg2;
- (void)selectGeneralComponentRowAtIndexPath:(id)arg1;
- (void)selectVpnComponentRowAtIndexPath:(id)arg1;
- (id)createGeneralComponentCell:(id)arg1;
- (id)createPerAppVpnComponentCell:(id)arg1 indexPath:(id)arg2;
- (id)createVpnComponentCell:(id)arg1;
- (void)launchVpnDetailsView:(id)arg1;
- (void)launchVpnConnectionsView;
- (void)setActiveConfigNameForCell:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)connectVpnConfigWithName:(id)arg1;
- (void)handleUserActivity;
- (void)restoreUserActivityState:(id)arg1;
- (void)disconnectActiveVpn;
- (void)connectActiveVpn;
- (void)switchAction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface HUDProgressView : UIView
{
    UIActivityIndicatorView *m_activityIndicator;
    NSString *m_labelStr;
    UILabel *m_label;
    NSTimer *m_timer;
    struct CGSize m_size;
    double m_hideAfterDelay;
    id <HUDProgressViewDelegate> m_delegate;
}

@property struct CGSize size; // @synthesize size=m_size;
@property(retain, nonatomic) NSString *labelStr; // @synthesize labelStr=m_labelStr;
- (void).cxx_destruct;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)unregisterFromNotifications;
- (void)registerForNotifications;
- (void)removeView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unregisterKeyValueObservation;
- (void)registerKeyValueObservation;
- (void)onProgressViewTimeout;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)close;
- (void)show;
- (void)dealloc;
- (id)initWithView:(id)arg1 andLabel:(id)arg2 andCloseAfterDelay:(double)arg3 withDelegate:(id)arg4;
- (id)initWithView:(id)arg1 andLabel:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface InfoViewController : UIViewController <SettingsChangeListenerProtocol, UIWebViewDelegate>
{
    id <InfoViewControllerDelegate> infoViewDelegate;
    UIWebView *webView;
    NSString *navItemTitle;
    NSString *htmlfileData;
    NSURLRequest *urlRequest;
}

@property(retain, nonatomic) NSURLRequest *urlRequest; // @synthesize urlRequest;
@property(retain, nonatomic) NSString *htmlfileData; // @synthesize htmlfileData;
@property(retain, nonatomic) NSString *navItemTitle; // @synthesize navItemTitle;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
@property(nonatomic) __weak id <InfoViewControllerDelegate> infoViewDelegate; // @synthesize infoViewDelegate;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)arg1;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)getScrollView;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)done:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)loadInfoText;
- (id)initInfoViewController:(id)arg1 withRequest:(id)arg2;
- (id)initInfoViewController:(id)arg1 htmlFileContent:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CustomizeDebugLogsToggle : NSObject
{
    int _component;
    basic_string_90719d97 _label;
}

@property(nonatomic) basic_string_90719d97 label; // @synthesize label=_label;
@property(nonatomic) int component; // @synthesize component=_component;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithComponent:(int)arg1 label:(const char *)arg2;

@end

__attribute__((visibility("hidden")))
@interface CustomizeDebugLogsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *componentsTableView;
}

+ (void)initialize;
@property(retain, nonatomic) UITableView *componentsTableView; // @synthesize componentsTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)refreshUI;
- (id)createCellWithSwitch:(int)arg1;
- (id)createTableViewCellWithUISwitch:(id)arg1;
- (void)switchAction:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface InterfaceSelectionViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *interfaceSelectionTableView;
    id <InterfaceSelectionDelegate> interfaceSelectionDelegate;
    long long activeIndex;
    long long originalIndex;
}

@property(nonatomic) long long originalIndex; // @synthesize originalIndex;
@property(nonatomic) long long activeIndex; // @synthesize activeIndex;
@property(nonatomic) __weak id <InterfaceSelectionDelegate> interfaceSelectionDelegate; // @synthesize interfaceSelectionDelegate;
@property(retain, nonatomic) UITableView *interfaceSelectionTableView; // @synthesize interfaceSelectionTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)activeRowToInterface:(long long)arg1;
- (long long)interfaceToActiveRow:(id)arg1;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSActiveVpnConfiguration : NSObject
{
    struct AppleVpnConfig *pVpnConfig;
    NSString *m_profileType;
    NSString *m_originalConfigName;
    NSString *m_configName;
    NSString *m_hostAddress;
    NSString *m_cachedHostAddress;
    _Bool m_bReconnectEnabled;
    _Bool m_bCertAuthEnabled;
    _Bool m_bOnDemandEnabled;
    struct AppleVpnCertificate *m_pVpnCert;
    NSString *m_selectedCert;
    NSMutableArray *m_domainListOnRetry;
    NSMutableArray *m_domainListNever;
    NSMutableArray *m_onDemandRules;
    _Bool m_bConnectWithIPSec;
    NSString *m_protocolAuthMethod;
    NSString *m_IKEIdentity;
}

@property(retain, nonatomic) NSString *IKEIdentity; // @synthesize IKEIdentity=m_IKEIdentity;
@property(retain, nonatomic) NSString *protocolAuthMethod; // @synthesize protocolAuthMethod=m_protocolAuthMethod;
@property(nonatomic) _Bool connectWithIPSec; // @synthesize connectWithIPSec=m_bConnectWithIPSec;
@property(retain, nonatomic) NSMutableArray *onDemandRules; // @synthesize onDemandRules=m_onDemandRules;
@property(retain, nonatomic) NSMutableArray *domainListNever; // @synthesize domainListNever=m_domainListNever;
@property(retain, nonatomic) NSMutableArray *domainListOnRetry; // @synthesize domainListOnRetry=m_domainListOnRetry;
@property(retain, nonatomic) NSString *selectedCert; // @synthesize selectedCert=m_selectedCert;
@property(nonatomic) _Bool onDemandEnabled; // @synthesize onDemandEnabled=m_bOnDemandEnabled;
@property(nonatomic) _Bool certAuthEnabled; // @synthesize certAuthEnabled=m_bCertAuthEnabled;
@property(nonatomic) _Bool reconnectEnabled; // @synthesize reconnectEnabled=m_bReconnectEnabled;
@property(retain, nonatomic) NSString *cachedHostAddress; // @synthesize cachedHostAddress=m_cachedHostAddress;
@property(retain, nonatomic) NSString *hostAddress; // @synthesize hostAddress=m_hostAddress;
@property(retain, nonatomic) NSString *originalConfigName; // @synthesize originalConfigName=m_originalConfigName;
@property(retain, nonatomic) NSString *configName; // @synthesize configName=m_configName;
@property(retain, nonatomic) NSString *profileType; // @synthesize profileType=m_profileType;
@property(nonatomic, setter=setVpnConfig:) struct AppleVpnConfig *pVpnConfig; // @synthesize pVpnConfig;
- (void).cxx_destruct;
- (_Bool)hasOnDemandRules;
- (void)saveOnDemandSettings:(struct __CFDictionary *)arg1;
- (void)updateAppInfoObjectsWithFriendlyName:(id)arg1 fromPolicyFile:(const char *)arg2;
- (void)saveTunnelProtocolSettings:(struct __CFDictionary *)arg1;
- (void)saveReconnectSettings:(struct __CFDictionary *)arg1;
- (_Bool)hasCertificates;
- (void)initTunnelProtocolSettings:(struct __CFDictionary *)arg1;
- (void)initReconnectSettings:(struct __CFDictionary *)arg1;
- (void)initOnDemandSettings:(struct __CFDictionary *)arg1;
- (void)initSettings:(struct __CFDictionary *)arg1;
- (void)dealloc;
- (id)getAppRules;
- (struct __CFData *)getCertPersistentRef;
- (void)updateDomainListsWithHostAddress;
- (_Bool)canEditDomainList;
- (_Bool)canEditUseOnDemand;
- (_Bool)canEditCertificate;
- (_Bool)canEditProtocolAuthentication;
- (_Bool)canEditConnectWithIPSec;
- (_Bool)canEditReconnect;
- (_Bool)canEditUseCertificate;
- (_Bool)canEditIKEIdentity;
- (_Bool)canEditServer;
- (_Bool)canEditDescription;
- (_Bool)canEditVpnConfig;
- (_Bool)isActiveConfigInUse;
- (void)certSelectionSave:(struct AppleVpnCertificate *)arg1 certPolicy:(int)arg2;
- (long long)updateSettings:(auto_cfref_218efd67 *)arg1;
- (id)initWithConfigName:(id)arg1 vpnConfig:(struct AppleVpnConfig *)arg2;

@end

__attribute__((visibility("hidden")))
@interface AppRuleInfo : NSObject
{
    NSString *m_identifier;
    NSString *m_friendlyName;
}

@property(retain, nonatomic) NSString *friendlyName; // @synthesize friendlyName=m_friendlyName;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=m_identifier;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface IOSAnyConnectApplicationMgr : NSObject <AppFrameworkInteractionProtocol, ApplicationNotificationProtocol, CertDeletionSourceProtocol, ActiveConfigSourceProtocol, AppleVpnConfigsProtocol>
{
    id <HomeViewSourceProtocol><ApplicationNotificationProtocol> m_homeViewController;
    id <CertDeletionListenerProtocol> m_certDeletionController;
    id <ActiveConfigListenerProtocol> m_activeConfigListener;
    AppleVpnConfigsMgr *m_configsMgr;
    struct AppPluginIPC m_appPluginIPC;
    _Bool m_bAppFrameworkInitialized;
    struct PluginMessageReceiver m_pluginMessageReceiver;
    _Bool m_bCommunicating;
    _Bool m_bHandshakeCompleted;
    int m_handshakeType;
    NSTimer *m_handshakeTimer;
    NSTimer *m_pluginDisposeTimer;
    NSTimer *m_FIPSIntegrityTimer;
    NSTimer *m_SCEPEnrollTimer;
    _Bool m_bPendingIPC;
    HUDProgressView *m_enableProgressView;
    IOSStatisticsMgr *m_statisticsMgr;
    IOSLogsMgr *m_logMgr;
    IOSProfileMgr *m_profileMgr;
    IOSLocalizationMgr *m_localizationMgr;
    IOSKeyboardListener *m_keyboardListener;
    NSTimer *m_disconnectTimer;
    NSTimer *m_connectTimer;
    NSString *m_disconnectConfigName;
    _Bool m_bReconnectingState;
    _Bool m_bPendingImport;
    _Bool m_bImportProfile;
    NSArray *pendingImportArray;
    NSArray *operatingModes;
    NSString *vpnApiState;
    HUDProgressView *m_importHostsProgressView;
    NSDictionary *m_deleteCertsDict;
    NSData *m_persistentPKCS12CertRef;
    NSString *m_deviceUniqueIdentifier;
    _Bool m_bDisposingPlugin;
    IOSUriHandlerMgr *m_uriHandlerManager;
    IOSSettingsManager *m_settingsManager;
    _Bool m_bPluginEnabled;
    _Bool m_bSentInitialApiIpcRequest;
    int m_ipcRequestCount;
    _Bool m_bPrimaryIPCEstablished;
    _Bool m_bConnectTimedOut;
    _Bool m_bReceivedFirstStateAfterHandshake;
    int m_lastVpnStatus;
    NSArray *m_certRefArray;
    _Bool m_bImportCert;
    _Bool m_bReload;
    LAContext *m_LAContext;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedAppMgr;
@property(readonly, nonatomic) id <HomeViewSourceProtocol><ApplicationNotificationProtocol> homeViewSource; // @synthesize homeViewSource=m_homeViewController;
@property(nonatomic) _Bool m_bPluginEnabled; // @synthesize m_bPluginEnabled;
@property(retain, nonatomic) HUDProgressView *m_enableProgressView; // @synthesize m_enableProgressView;
@property(retain, nonatomic) NSString *deviceUniqueIdentifier; // @synthesize deviceUniqueIdentifier=m_deviceUniqueIdentifier;
@property(retain, nonatomic) NSDictionary *deleteCertsDict; // @synthesize deleteCertsDict=m_deleteCertsDict;
@property(readonly, nonatomic) IOSLocalizationMgr *localizationMgr; // @synthesize localizationMgr=m_localizationMgr;
@property(readonly, nonatomic) IOSProfileMgr *profileMgr; // @synthesize profileMgr=m_profileMgr;
@property(readonly, nonatomic) IOSLogsMgr *logMgr; // @synthesize logMgr=m_logMgr;
@property(readonly, nonatomic) IOSUriHandlerMgr *uriHandlerManager; // @synthesize uriHandlerManager=m_uriHandlerManager;
@property(retain, nonatomic) NSString *vpnApiState; // @synthesize vpnApiState;
@property(retain, nonatomic) NSArray *operatingModes; // @synthesize operatingModes;
@property(readonly, nonatomic) IOSSettingsManager *settingsManager; // @synthesize settingsManager=m_settingsManager;
@property(retain, nonatomic) NSArray *pendingImportArray; // @synthesize pendingImportArray;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)getConnectedPerAppIds;
- (void)setImportCert:(_Bool)arg1;
- (_Bool)isImportCertInProcess;
- (void)unRegisterActiveConfigListener;
- (void)registerActiveConfigListener:(id)arg1;
- (void)ImportPKCS12Cert:(id)arg1;
- (void)DeleteCertificates:(id)arg1;
- (void)GetServerCertificates;
- (void)GetUserCertificates;
- (void)UnregisterCertDeletionController;
- (void)RegisterCertDeletionController:(id)arg1;
- (void)activeConfigUpdated;
- (void)configListUpdated;
- (void)handleTerminate;
- (void)handleEnterBackground;
- (void)handleResignActive;
- (void)handleBecomeActive;
- (void)handleDidFinishLaunching;
- (void)updateVPNConfigsOnUpgrade;
- (_Bool)importProfileNeeded;
- (void)restoreLocalization;
- (void)performDelayedOperations;
- (void)saveDelayedOperations:(struct __CFDictionary *)arg1;
- (_Bool)setDomainList:(id)arg1 fromParameters:(id)arg2 intoDictionary:(struct __CFDictionary *)arg3 withKey:(const struct __CFString *)arg4;
- (long long)markActiveConfig:(id)arg1;
- (struct AppleVpnConfig *)findConfigMatchingName:(id)arg1 hostURL:(id)arg2;
- (void)scepEnrollmentExpiration;
- (void)FIPSIntegrityExpiration;
- (void)handleDisposePluginsExpiration;
- (void)handleDisconnectExpiration;
- (void)handleHandshakeExpiration;
- (void)handleConnectExpiration;
- (void)stopAnimating;
- (void)startAnimating;
- (void)handshakeReplyReceivedForImportPKCS12Cert;
- (void)handshakeReplyReceivedForCertsDel;
- (void)postExecuteImportHosts:(_Bool)arg1;
- (void)executeImportHostsReceivedAfterDelay;
- (void)CertSignHashReceivedCB:(id)arg1;
- (void)sendCertSignHashReplyMessage:(id)arg1 expectedLength:(int)arg2 withError:(id)arg3;
- (void)SCEPEnrollExitReceived;
- (void)SCEPEnrollStartReceived;
- (void)FIPSDisableStopReceived:(_Bool)arg1;
- (void)FIPSDisableStartReceived;
- (void)FIPSEnableStopReceived:(_Bool)arg1;
- (void)FIPSEnableStartReceived;
- (void)importCertDataReplyReceived:(struct __CFString *)arg1;
- (void)importProfileReplyReceived:(struct __CFString *)arg1;
- (void)localizationRemovalReplyReceived:(_Bool)arg1;
- (void)downloadLocalizationReceived:(id)arg1;
- (void)deleteProfileReplyReceived:(_Bool)arg1;
- (void)importHostsReceived:(id)arg1;
- (void)configurationChanged:(id)arg1 legacyStatus:(int)arg2;
- (void)perAppConfigChanged:(int)arg1;
- (void)performReEnterAppIpc;
- (void)deleteCertsReplyReceived:(struct __CFString *)arg1;
- (void)getUserCertsReceived:(id)arg1;
- (void)getServerCertsReceived:(id)arg1;
- (void)logGetReplyReceived:(id)arg1 configId:(id)arg2;
- (void)logEnableReplyReceived:(_Bool)arg1;
- (void)messageNotifyReceived:(id)arg1 messageText:(id)arg2 sensitive:(_Bool)arg3;
- (void)stateNotifyReceived:(id)arg1 configId:(id)arg2;
- (void)statsRequestReplyReceived:(id)arg1 configId:(id)arg2;
- (void)certificateTrustPromptReceived:(id)arg1;
- (void)bannerPromptReceived:(id)arg1;
- (void)userPromptReceived:(id)arg1;
- (void)handshakeReplyReceived:(id)arg1 configId:(id)arg2;
- (void)errorProcessingNotification:(int)arg1 description:(id)arg2;
- (void)errorProcessingMessage:(int)arg1 description:(id)arg2;
- (void)showAboutInDetailView;
- (void)showSettingsInDetailView;
- (void)refreshHomeView;
- (id)disposePlugins;
- (id)getKeyboardListener;
- (id)getStatisticsSource;
- (id)getLogDisplaySource;
- (id)getDiagnosticsSource;
- (list_10bdc403)getUnselectedActivePerAppConfigs;
- (struct AppleVpnConfig *)getConfigurationWithId:(id)arg1;
- (struct AppleVpnConfig *)getActiveConfiguration;
- (long long)importLocalizationFile;
- (long long)importProfile:(id)arg1;
- (void)sendLocalizationDownloadMessage:(_Bool)arg1;
- (long long)sendDeleteLocalizationMessage;
- (long long)sendStatsRequestMessage:(_Bool)arg1 configId:(id)arg2;
- (long long)sendDeleteProfileMessage;
- (long long)sendLogRoutesMessage;
- (long long)sendLogGetMessage:(struct AppleVpnConfig *)arg1;
- (long long)sendLogGetMessage;
- (long long)sendLogEnableMessage:(_Bool)arg1;
- (_Bool)isVPNConnected;
- (_Bool)isVPNInReconnectingState;
- (_Bool)isIPCHandShakeCompleted;
- (_Bool)isCommunicatingWithPlugins;
- (_Bool)isAppFrameworkInitialized;
- (void)setStatusTextToStatisticsView:(id)arg1 forKey:(id)arg2;
- (long long)setActiveConfig:(id)arg1;
- (long long)copyConfigNames:(id)arg1;
- (id)removeImportedConfigurations;
- (void)deleteConfig:(struct AppleVpnConfig *)arg1 displayError:(_Bool)arg2;
- (long long)saveConfig:(struct AppleVpnConfig *)arg1;
- (long long)sendImportServerCertMessage:(struct __CFData *)arg1;
- (long long)sendBannerPromptReplyMessage:(_Bool)arg1;
- (long long)sendCertificateTrustPromptReplyMessage:(_Bool)arg1 importCert:(_Bool)arg2;
- (long long)sendUserPromptReplyMessage:(struct __CFDictionary *)arg1;
- (void)handleCertTrustPromptError;
- (long long)negotiateIpc:(int)arg1 configId:(id)arg2 bPrimaryVpn:(_Bool)arg3;
- (long long)negotiateIpc:(int)arg1;
- (const char *)handshakeTypeToStr:(int)arg1;
- (long long)disconnect;
- (void)connect;
- (void)closeIPC;
- (void)cleanupAppFrameworkInteraction;
- (void)onToggle;
- (void)initAppFrameworkInteraction;
- (void)setHomeView:(id)arg1;
- (void)listenIPC:(id)arg1 bPrimaryVpn:(_Bool)arg2;
- (void)onReceiveMsgFromExtension:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)deleteAppMgr;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSBandwidthGraphView : UIView
{
    id <IOSBandWidthGraphViewDataSource> graphDataSource;
    UIColor *m_lineColor;
    UIColor *m_patternColor;
    double m_gradientComponents[8];
}

@property(nonatomic) __weak id <IOSBandWidthGraphViewDataSource> graphDataSource; // @synthesize graphDataSource;
- (void).cxx_destruct;
- (void)drawNoDataImageAndNoDataText:(struct CGRect)arg1;
- (id)scaleImage:(id)arg1 toRect:(struct CGRect)arg2;
- (void)drawGradient:(struct CGContext *)arg1 dataPoints:(const struct CGPoint *)arg2 totalGraphPoints:(int)arg3 graphHeight:(double)arg4;
- (void)drawPattern:(struct CGContext *)arg1 targetRect:(struct CGRect)arg2;
- (void)reloadData;
- (void)cacheGraphColors;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface IOSBandwidthGraphViewController : UIViewController <IOSBandWidthGraphViewDataSource, StatisticsListenerProtocol, SettingsChangeListenerProtocol>
{
    IOSBandwidthGraphView *bytesSentBandwidthGraphView;
    IOSBandwidthGraphView *bytesReceivedBandwidthGraphView;
    struct BandwidthViewData m_bytesSentGraphViewData;
    struct BandwidthViewData m_bytesReceivedGraphViewData;
    id <StatisticsSourceProtocol> statisticsSource;
    NSString *configId;
}

@property(retain, nonatomic) NSString *configId; // @synthesize configId;
@property(nonatomic) __weak id <StatisticsSourceProtocol> statisticsSource; // @synthesize statisticsSource;
@property(retain, nonatomic) IOSBandwidthGraphView *bytesReceivedBandwidthGraphView; // @synthesize bytesReceivedBandwidthGraphView;
@property(retain, nonatomic) IOSBandwidthGraphView *bytesSentBandwidthGraphView; // @synthesize bytesSentBandwidthGraphView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (_Bool)isStatsForConfig:(id)arg1;
- (void)graphDataUpdated;
- (void)statisticsRequestTimeout;
- (void)statisticsUpdated:(id)arg1;
- (long long)LeadingTimeAxisTick:(id)arg1;
- (long long)MaxDataSize:(id)arg1;
- (long long)MaxValueForGraph:(id)arg1;
- (long long)MinValueForGraph:(id)arg1;
- (const list_69940b9a *)ValuesForGraph:(id)arg1;
- (id)LabelForGraph:(id)arg1;
- (_Bool)GradientColors:(id)arg1 gradientStartColor:(id *)arg2 gradientEndColor:(id *)arg3;
- (id)PatternColor:(id)arg1;
- (id)LineColor:(id)arg1;
- (void)refreshGraphView;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSFileDownloader : NSObject <NSURLSessionDelegate>
{
    int m_downloadType;
    NSMutableData *m_receivedData;
    NSString *m_destPath;
    NSURLSession *m_urlSession;
    NSURLSessionDataTask *m_task;
    id <FileDownloaderDelegate> m_fileDownloaderDelegate;
}

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)startRequestWithUrl:(id)arg1;
- (void)dealloc;
- (id)initDownload:(id)arg1 toFile:(id)arg2 downloadType:(int)arg3 theDelegate:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSKeyboardListener : NSObject <KeyboardSourceProtocol>
{
    NSMutableArray *m_KeyboardListenerArray;
    _Bool m_bVisible;
    struct CGRect m_KeyboardFrame;
}

- (void).cxx_destruct;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (_Bool)isKeyboardVisible;
- (double)calculateHeightToAdjust:(id)arg1;
- (void)removeKeyboardListener:(id)arg1;
- (void)addKeyboardListener:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSLocalizationMgr : NSObject <FileDownloaderDelegate, HUDProgressViewDelegate>
{
    IOSFileDownloader *m_pLocalizationDownloader;
    NSMutableArray *m_localizationListenerArray;
    NSTimer *m_deleteLocalizationExpirationTimer;
    HUDProgressView *m_progressView;
}

- (void).cxx_destruct;
- (void)hudProgressViewTimedOut;
- (void)handleDeleteLocalizationDataRequestExpiration:(id)arg1;
- (void)dismissProgressView:(_Bool)arg1;
- (void)displayProgressView:(id)arg1;
- (void)DownloadCompleteCB:(_Bool)arg1 receivedData:(id)arg2;
- (void)handleHandshakeExpirationForDeletingLocalizationData;
- (void)handleDeletingLocalizationDataReply:(_Bool)arg1;
- (void)handshakeReplyReceivedForDeletingLocalizationData;
- (void)deleteAllLocalizationFiles;
- (void)importLocalization:(id)arg1 forLang:(id)arg2;
- (void)removeLocalizationListener:(id)arg1;
- (void)addLocalizationListener:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSLogsMgr : NSObject <DiagnosticsSourceProtocol, LogDisplaySourceProtocol, ApplicationNotificationProtocol, LogUpdateProtocol, HUDProgressViewDelegate>
{
    struct auto_ptr<CAppLog> m_apAppLog;
    struct IOSAppLogger *m_pIOsLogger;
    NSTimer *m_pollDebugMessagesTimer;
    NSTimer *m_logEnableExpirationTimer;
    NSTimer *m_logGetExpirationTimer;
    NSMutableDictionary *m_perAppDebugLogCacheDict;
    unsigned int m_uiLogEnableAck;
    _Bool m_bPendingVpnServiceLogState;
    id <DiagnosticsListenerProtocol> m_diagnosticsViewController;
    NSMutableSet *m_pluginDebugLogDisplayViewControllers;
    NSMutableSet *m_appDebugLogDisplayViewControllers;
    NSMutableSet *m_appMessageDisplayViewControllers;
    HUDProgressView *m_progressView;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)hudProgressViewTimedOut;
- (void)UpdateLogCount:(long long)arg1 forType:(int)arg2;
- (void)handleTerminate;
- (void)handleEnterBackground;
- (void)handleResignActive;
- (void)handleBecomeActive;
- (void)handleDidFinishLaunching;
- (void)checkPerAppVpnLogs;
- (void)handleLogStateChange:(_Bool)arg1;
- (void)dismissProgressView:(_Bool)arg1;
- (void)displayProgressView:(id)arg1;
- (void)setLoggingState:(_Bool)arg1;
- (void)SendLogEnable:(_Bool)arg1;
- (_Bool)canSendIPC;
- (void)disablePollDebugMessagesTimer;
- (void)enablePollDebugMessagesTimer:(unsigned int)arg1;
- (long long)addLogEntry:(id)arg1 logType:(int)arg2 logEntryIdKey:(id)arg3;
- (long long)updateLogWithEntries:(id)arg1 logEntryIdKey:(id)arg2;
- (void)addMessagesLog:(id)arg1;
- (void)pollLogMessages;
- (void)handleLogGetRequestExpiration:(id)arg1;
- (void)handleLogEnableRequestExpiration:(id)arg1;
- (id)CopyAllVpnLogs;
- (id)CopyLogTextForType:(int)arg1;
- (id)CopyLogTextForType:(int)arg1 row:(long long)arg2;
- (long long)GetLogCountForType:(int)arg1;
- (void)UnregisterLogDisplayController:(id)arg1 type:(int)arg2;
- (void)RegisterLogDisplayController:(id)arg1 type:(int)arg2;
- (_Bool)GetLoggingState;
- (void)ClearLogs;
- (void)EnableLog:(_Bool)arg1;
- (void)UnregisterDiagnosticsController;
- (void)RegisterDiagnosticsController:(id)arg1;
- (void)messageNotifyReceived:(id)arg1 messageText:(id)arg2 sensitive:(_Bool)arg3;
- (void)handleHandshakeExpirationForLogEnable;
- (void)handshakeReplyReceivedForLogEnable;
- (void)logEnableReplyReceived:(_Bool)arg1;
- (void)logGetReplyReceived:(id)arg1 configId:(id)arg2 bPrimaryVpn:(_Bool)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)initializeLogMgr;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSProfileMgr : NSObject <FileDownloaderDelegate, NSXMLParserDelegate, HUDProgressViewDelegate>
{
    IOSFileDownloader *m_pProfileDownloader;
    NSData *m_profileData;
    NSMutableArray *m_profileListenerArray;
    NSTimer *m_deleteProfileExpirationTimer;
    HUDProgressView *m_progressView;
    _Bool m_parserAborted;
    id <ProfileOperationsDelegate> m_profileOperationsDelegate;
}

@property(retain, nonatomic) NSData *profileData; // @synthesize profileData=m_profileData;
- (void).cxx_destruct;
- (void)hudProgressViewTimedOut;
- (void)handleDeleteProfileDataRequestExpiration:(id)arg1;
- (void)dismissProgressView:(_Bool)arg1;
- (void)displayProgressView:(id)arg1;
- (void)validateProfileData:(id)arg1;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)DownloadCompleteCB:(_Bool)arg1 receivedData:(id)arg2;
- (void)handleHandshakeExpirationForDeletingProfile;
- (void)handleDeletingProfileReply:(_Bool)arg1;
- (void)handleImportProfileReplyWithStatus:(long long)arg1;
- (void)handshakeReplyReceivedForDeletingProfile;
- (void)handshakeReplyReceivedForImportProfile;
- (_Bool)isProfileImportInProcess;
- (long long)deleteProfile;
- (void)unsubscribeProfileOperationsDelegate;
- (long long)deleteProfileWithdelegate:(id)arg1;
- (long long)importProfileWithData:(id)arg1 delegate:(id)arg2;
- (void)importProfileWithURL:(id)arg1 delegate:(id)arg2;
- (void)removeProfileListener:(id)arg1;
- (void)addProfileListener:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface LogItemProvider : UIActivityItemProvider
{
    NSString *subject;
    NSString *message;
}

@property(retain, nonatomic) NSString *message; // @synthesize message;
@property(retain, nonatomic) NSString *subject; // @synthesize subject;
- (void).cxx_destruct;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)initWithPlaceholderItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface IOSScrollableUILabel : UIScrollView
{
    UILabel *label[2];
    _Bool isAnimating;
}

- (void).cxx_destruct;
- (void)startScrolling;
- (void)setTextAlignment:(long long)arg1;
- (void)setFont:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setText:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface IOSSettingsManager : NSObject
{
    NSMutableArray *m_settingsListenerArray;
    NSArray *m_mdmAdminEnforcedSettings;
    NSString *m_Theme;
    UIImage *m_AnyConnectIcon;
    UIImage *m_CiscoLogoIcon;
    NSString *m_language;
    NSString *m_settingsFilePath;
    _Bool m_bIsAppFreshInstall;
    _Bool m_bIsAppUpgrade;
    struct PluginLoader *m_pPluginLoader;
    struct SNAK_StoragePlugin *m_pSNAKStorage;
    struct SNAK_DeviceInfoPlugin *m_pSNAKDeviceInfo;
    struct SNAKDeviceInfoPluginCBImpl *m_pSNAKDeviceInfoCB;
}

@property(retain, nonatomic) NSString *settingsFilePath; // @synthesize settingsFilePath=m_settingsFilePath;
@property(retain, nonatomic) NSString *language; // @synthesize language=m_language;
@property(retain, nonatomic) UIImage *ciscoLogoIcon; // @synthesize ciscoLogoIcon=m_CiscoLogoIcon;
@property(retain, nonatomic) UIImage *anyconnectIcon; // @synthesize anyconnectIcon=m_AnyConnectIcon;
@property(retain, nonatomic) NSString *theme; // @synthesize theme=m_Theme;
@property(retain, nonatomic) NSArray *mdmAdminEnforcedSettings; // @synthesize mdmAdminEnforcedSettings=m_mdmAdminEnforcedSettings;
- (void).cxx_destruct;
- (id)getDeviceUniqueId;
- (_Bool)isMdmEnforcedSetting:(id)arg1;
- (void)setMdmEnforcedSettingsList:(id)arg1;
- (long long)getSupportedLangs:(vector_9492931a *)arg1;
- (void)setAppUpgrade:(_Bool)arg1;
- (_Bool)isAppUpgrade;
- (void)setAppFreshInstall:(_Bool)arg1;
- (_Bool)isAppFreshInstall;
- (long long)initLocalization;
- (void)initLangSetting;
- (void)initializeTheme;
- (_Bool)getHideMDMSettingValue;
- (_Bool)getHideVPNSettingValue;
- (void)setSettingsValueForKey:(id)arg1 withValue:(_Bool)arg2;
- (_Bool)getSettingsValueForKey:(id)arg1;
- (void)NotifyLocalizationChange;
- (id)certWillExpireColor;
- (id)invalidCertDateColor;
- (id)copyrightScrollViewColor;
- (id)copyrightLabelColor;
- (id)versionLabelColor;
- (id)secureMobilityLabelColor;
- (id)anyconnectLabelColor;
- (long long)tableSpinnerStyle:(_Bool)arg1;
- (id)tableCellBackgroundColor;
- (id)tableCellTextColor;
- (id)defaultSystemFont;
- (id)tabBarTextColor;
- (id)headerTextColor;
- (id)ciscoThemeColor;
- (id)defaultPlaceHolderColor;
- (id)progressViewTextColor;
- (id)buttonTextColor;
- (id)detailTextColor;
- (id)highlightTextColor;
- (id)disabledColor;
- (id)defaultTextColor;
- (id)ciscoLogoHeader;
- (id)anyconnectAboutIcon;
- (id)statusGreenColor;
- (id)statusRedColor;
- (id)progressiveBackgroundColor;
- (id)modalBackgroundColor;
- (id)commonBackgroundColor;
- (void)removeSettingsListener:(id)arg1;
- (void)addSettingsListener:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface IOSSettingsToggle : NSObject
{
    int _cellType;
    NSString *_settingsKey;
    basic_string_90719d97 _label;
}

@property(retain, nonatomic) NSString *settingsKey; // @synthesize settingsKey=_settingsKey;
@property(nonatomic) basic_string_90719d97 label; // @synthesize label=_label;
@property(nonatomic) int cellType; // @synthesize cellType=_cellType;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCellType:(int)arg1 label:(const char *)arg2 settingsKey:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface IOSSettingsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol, InfoViewControllerDelegate, URIHandlerDelegate>
{
    UITableView *settingsTableView;
    UIButton *infoButton;
    NSString *m_selectedURIControl;
    NSString *m_selectedPolicyControl;
    double m_frameWidth;
}

+ (void)initialize;
@property(retain, nonatomic) UIButton *infoButton; // @synthesize infoButton;
@property(retain, nonatomic) UITableView *settingsTableView; // @synthesize settingsTableView;
- (void).cxx_destruct;
- (void)URIHandlerUpdate:(id)arg1;
- (void)AdvancedSettingsChanged;
- (void)LangChanged;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)createCellWithOutSwitch;
- (id)createCellWithSwitch:(int)arg1;
- (id)createTableViewCellWithUISwitch:(id)arg1;
- (void)switchAction:(id)arg1;
- (int)getURIControlIndex;
- (basic_string_90719d97)getURIControl;
- (void)localizeUI;
- (void)themeUI;
- (void)initTableFooter;
- (void)refreshUI;
- (void)dealloc;
- (void)showInfo;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface IOSStatisticsMgr : NSObject <StatisticsSourceProtocol, ApplicationNotificationProtocol>
{
    NSMutableArray *m_statisticsListenerArray;
    NSTimer *m_statisticsUpdateTimer;
    NSTimer *m_statisticsRequestTimeoutTimer;
    NSMutableDictionary *m_cachedStatistics;
    _Bool m_bHistoricalStatsDataNeeded;
    NSString *m_configId;
    struct map<std::__1::basic_string<char>, BandwidthGraphData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, BandwidthGraphData>>> m_bytesSentGraphDataMap;
    struct map<std::__1::basic_string<char>, BandwidthGraphData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, BandwidthGraphData>>> m_bytesReceivedGraphDataMap;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)incrementLeadingTimeAxisTick:(struct BandwidthGraphData *)arg1;
- (void)resetGraphData;
- (void)addToGraphData:(struct BandwidthGraphData *)arg1 withBytes:(long long)arg2 timeStamp:(struct __CFString *)arg3;
- (void)loadStatsGraphData:(id)arg1 configId:(id)arg2;
- (void)handleTerminate;
- (void)handleEnterBackground;
- (void)handleResignActive;
- (void)handleBecomeActive;
- (void)handleDidFinishLaunching;
- (void)statisticsUpdateTimerExpired:(id)arg1;
- (void)statisticsRequestTimeoutTimerExpired:(id)arg1;
- (const struct BandwidthGraphData *)GetBytesReceivedGraphData:(id)arg1;
- (const struct BandwidthGraphData *)GetBytesSentGraphData:(id)arg1;
- (void)removeStatisticsListener:(id)arg1;
- (void)addStatisticsListener:(id)arg1;
- (void)requestStatisticsUpdate;
- (id)getCachedStatistics;
- (_Bool)canReceiveStatistics;
- (void)setActiveVpnConfigId:(id)arg1;
- (void)VPNConnectionDisconnected;
- (void)SetStatusText:(id)arg1 forKey:(id)arg2 configId:(id)arg3;
- (void)StatsRequestReplyReceived:(id)arg1 configId:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UriCallbacks : NSObject
{
    NSMutableDictionary *_successHandlers;
    NSMutableDictionary *_errorHandlers;
}

@property(retain, nonatomic) NSMutableDictionary *errorHandlers; // @synthesize errorHandlers=_errorHandlers;
@property(retain, nonatomic) NSMutableDictionary *successHandlers; // @synthesize successHandlers=_successHandlers;
- (void).cxx_destruct;
- (void)resetForCmd:(id)arg1;
- (void)reset;
- (id)getErrorCallbackForCmd:(id)arg1;
- (id)getSuccessCallbackForCmd:(id)arg1;
- (void)setErrorCallback:(id)arg1 forCmd:(id)arg2;
- (void)setSuccessCallback:(id)arg1 forCmd:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface IOSUriHandlerMgr : NSObject <FileDownloaderDelegate>
{
    NSString *m_pendingCommand;
    NSDictionary *m_pendingParameters;
    NSString *m_lastURLHandlerError;
    UIAlertController *m_urlCommandAlert;
    IOSFileDownloader *m_pFileDownloader;
    NSMutableDictionary *m_credentialPrefill;
    _Bool m_bSetActiveConfig;
    _Bool m_bPendingPrompt;
    UriCallbacks *_uriCallbacks;
}

@property(retain, nonatomic) UriCallbacks *uriCallbacks; // @synthesize uriCallbacks=_uriCallbacks;
@property(retain, nonatomic) NSMutableDictionary *credentialPrefill; // @synthesize credentialPrefill=m_credentialPrefill;
@property(retain, nonatomic) NSString *lastURLHandlerError; // @synthesize lastURLHandlerError=m_lastURLHandlerError;
@property(retain, nonatomic) NSDictionary *pendingParameters; // @synthesize pendingParameters=m_pendingParameters;
@property(retain, nonatomic) NSString *pendingCommand; // @synthesize pendingCommand=m_pendingCommand;
- (void).cxx_destruct;
- (void)DownloadCompleteCB:(_Bool)arg1 receivedData:(id)arg2;
- (void)handleOnSuccessForCmd:(id)arg1;
- (void)handleOnErrorForCmd:(id)arg1;
- (long long)handlePendingImport:(id)arg1;
- (long long)handlePendingCreate:(id)arg1;
- (long long)handlePendingDisconnect;
- (long long)handlePendingConnect:(id)arg1;
- (void)handleCommands;
- (void)HandleOnSuccessURIForDisconnect;
- (void)HandleOnErrorURIForDisconnect;
- (void)HandleOnSuccessURIForConnect;
- (void)HandleOnErrorURIForConnect;
- (void)HandleImportReplyWithStatus:(long long)arg1 errorMessage:(id)arg2;
- (void)handlePendingCommands;
- (_Bool)shouldHandleURIWithoutDelay;
- (_Bool)validateURL:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface iPhoneAnyConnectUIAppDelegate : NSObject <UIApplicationDelegate, UITabBarControllerDelegate, UISplitViewControllerDelegate>
{
    UIWindow *window;
    UITabBarController *tabBarController;
    UISplitViewController *homeViewControllerForiPad;
    UIViewController *m_detailView;
    _Bool bHideDetailView;
    _Bool _bConfigsLoaded;
}

@property(nonatomic) _Bool bConfigsLoaded; // @synthesize bConfigsLoaded=_bConfigsLoaded;
@property(nonatomic) _Bool bHideDetailView; // @synthesize bHideDetailView;
@property(retain, nonatomic) UISplitViewController *homeViewControllerForiPad; // @synthesize homeViewControllerForiPad;
@property(retain, nonatomic) UITabBarController *tabBarController; // @synthesize tabBarController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window;
- (void).cxx_destruct;
- (id)splitViewController:(id)arg1 separateSecondaryViewControllerFromPrimaryViewController:(id)arg2;
- (id)primaryViewControllerForExpandingSplitViewController:(id)arg1;
- (_Bool)splitViewController:(id)arg1 collapseSecondaryViewController:(id)arg2 ontoPrimaryViewController:(id)arg3;
- (id)navigateToHome;
- (void)setDetailViewController:(id)arg1;
- (void)setNetworkActivityIndicatorVisible:(_Bool)arg1;
- (void)dealloc;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (_Bool)splitViewController:(id)arg1 shouldHideViewController:(id)arg2 inOrientation:(long long)arg3;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (_Bool)application:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface iPhoneLogViewController : UIViewController <SettingsChangeListenerProtocol, UIActionSheetDelegate>
{
    UISegmentedControl *logSegmentedControl;
    UIView *logView;
    UIView *segmentControlView;
    int m_displayType;
    LogDisplayViewController *m_messageDisplayController;
    LogDisplayViewController *m_pluginDebugDisplayController;
    LogDisplayViewController *m_appDebugDisplayController;
    UIBarButtonItem *m_clearLogsButton;
}

@property(retain, nonatomic) UIView *segmentControlView; // @synthesize segmentControlView;
@property(retain, nonatomic) UIView *logView; // @synthesize logView;
@property(retain, nonatomic) UISegmentedControl *logSegmentedControl; // @synthesize logSegmentedControl;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)clearLogs;
- (void)localizeUI;
- (void)themeUI;
- (void)segmentedControlAction:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface iPhoneMainViewController : UIViewController <UINavigationControllerDelegate, SettingsChangeListenerProtocol>
{
    UIImageView *backgroundImageView;
    UIImageView *ciscoLogoImageView;
    UILabel *anyconnectLabel;
    UILabel *secureMobilityLabel;
    UIView *homeView;
    HomeViewController *homeViewController;
}

@property(retain, nonatomic) HomeViewController *homeViewController; // @synthesize homeViewController;
@property(retain, nonatomic) UIView *homeView; // @synthesize homeView;
@property(retain, nonatomic) UILabel *secureMobilityLabel; // @synthesize secureMobilityLabel;
@property(retain, nonatomic) UILabel *anyconnectLabel; // @synthesize anyconnectLabel;
@property(retain, nonatomic) UIImageView *ciscoLogoImageView; // @synthesize ciscoLogoImageView;
@property(retain, nonatomic) UIImageView *backgroundImageView; // @synthesize backgroundImageView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface iPhoneUtility : NSObject
{
}

+ (void)deleteDisconnectionShortcut;
+ (void)deleteConnectionShortcuts:(id)arg1;
+ (void)updateConnectionShortcuts:(id)arg1 updatedConfigs:(id)arg2;
+ (void)donateDisconnectionShortcut;
+ (void)donateConnectionShortcut:(id)arg1 userInteractionRequired:(_Bool)arg2;
+ (_Bool)readMDMDefaultsValue;
+ (double)calculateHeightForCellWithWidth:(double)arg1 andLable1Text:(id)arg2 andLabel2Text:(id)arg3;
+ (void)setNavBarStyleAndBackgroundColorForView:(id)arg1 andWithTableView:(id)arg2;
+ (void)setNavigationBarStyle:(id)arg1;
+ (vector_ee50fed1)copyiOSMDMClientCertificates;
+ (id)getTopViewController:(id)arg1;
+ (id)mainViewController;
+ (_Bool)isVPNServiceLoggingEnabled;
+ (id)translateNSString:(id)arg1;
+ (id)translateWithArg:(struct MsgWithArg *)arg1;
+ (id)translate:(const basic_string_90719d97 *)arg1;
+ (id)getAppStoragePath;
+ (void)emailStatusResult:(long long)arg1 error:(id)arg2 vc:(id)arg3;
+ (void)setDropShadowImageViewHidden:(_Bool)arg1;
+ (_Bool)isValidURL:(id)arg1;
+ (id)createHexString:(id)arg1;
+ (id)createUIColor:(int)arg1 alpha:(float)arg2;
+ (void)splitURL:(id)arg1 intoProtocol:(id *)arg2 hostname:(id *)arg3 path:(id *)arg4;
+ (id)deviceType;
+ (_Bool)isIPhoneWithBiggerScreen;
+ (_Bool)isIPad;
+ (id)convertSocketAddrToString:(struct sockaddr *)arg1 andMask:(struct sockaddr *)arg2;
+ (id)copyRouteTable;
+ (id)copyNetworkInfo;
+ (id)copyDNSServers;
+ (id)copyHardwareVersion;
+ (id)getVendorIdentifier;
+ (void)removeCellSubViews:(id)arg1;
+ (struct CGRect)adjustTextFooterView:(id)arg1 frame:(struct CGRect)arg2 superView:(id)arg3;
+ (id)createTextFooterView:(double)arg1 text:(id)arg2;
+ (id)createButton:(id)arg1 frame:(struct CGRect)arg2 target:(id)arg3 selector:(SEL)arg4 image:(id)arg5;
+ (id)createButton:(id)arg1 target:(id)arg2 selector:(SEL)arg3 image:(id)arg4;
+ (id)createButton:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (double)labelViewHeight:(id)arg1 font:(id)arg2 width:(double)arg3 lineBreakMode:(long long)arg4;
+ (double)labelViewHeight:(id)arg1 font:(id)arg2 width:(double)arg3;
+ (double)labelViewHeight:(id)arg1 font:(id)arg2 insideTable:(id)arg3;
+ (double)labelViewHeight:(id)arg1 insideTable:(id)arg2;
+ (double)labelViewHeight:(id)arg1 font:(id)arg2;
+ (double)labelViewHeight:(id)arg1;
+ (id)createLabelView:(id)arg1 font:(id)arg2 width:(double)arg3 margin:(double)arg4;
+ (id)createLabelView:(id)arg1 font:(id)arg2 width:(double)arg3;
+ (id)createLabelView:(id)arg1 font:(id)arg2 insideTable:(id)arg3;
+ (id)createLabelView:(id)arg1 insideTable:(id)arg2 margin:(double)arg3;
+ (id)createLabelView:(id)arg1 insideTable:(id)arg2;
+ (id)createLabelView:(id)arg1 font:(id)arg2;
+ (id)createLabelView:(id)arg1;
+ (id)createLabel:(id)arg1 font:(id)arg2 frame:(struct CGRect)arg3;
+ (id)createLabel:(id)arg1 frame:(struct CGRect)arg2;
+ (id)createLabel:(id)arg1 font:(id)arg2 width:(double)arg3;
+ (id)createLabel:(id)arg1 width:(double)arg2;
+ (void)addMDMMessagesLog:(id)arg1;
+ (void)notifyUser:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface iPhoneVPNDetailsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol, StatisticsListenerProtocol>
{
    UITableView *statsTableView;
    UIView *bandWidthGraphView;
    IOSBandwidthGraphViewController *m_bandwidthGraphViewController;
    id <StatisticsSourceProtocol> m_statisticsSource;
    NSLayoutConstraint *m_tableHeightConstraint;
    double m_defaultConstraintValue;
    double m_rowHeight;
    _Bool m_bTableLoadingComplete;
    NSString *configId;
}

@property(retain, nonatomic) NSString *configId; // @synthesize configId;
@property(nonatomic) __weak id <StatisticsSourceProtocol> statisticsSource; // @synthesize statisticsSource=m_statisticsSource;
@property(retain, nonatomic) IOSBandwidthGraphViewController *bandwidthGraphViewController; // @synthesize bandwidthGraphViewController=m_bandwidthGraphViewController;
@property(retain, nonatomic) UIView *bandWidthGraphView; // @synthesize bandWidthGraphView;
@property(retain, nonatomic) UITableView *statsTableView; // @synthesize statsTableView;
- (void).cxx_destruct;
- (void)applicationDidEnterForeground;
- (void)statisticsUpdated:(id)arg1;
- (void)statisticsRequestTimeout;
- (void)LangChanged;
- (void)updateLayoutForNewOrientationOniPad;
- (void)localizeUI;
- (void)themeUI;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidUnload;
- (void)initBandWidthGraphView;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface LogDisplayViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, LogDisplayListenerProtocol, SettingsChangeListenerProtocol>
{
    int displayType;
    id <LogDisplaySourceProtocol> logSourceController;
    _Bool m_bInitialAutoScrollDone;
    unsigned long long m_uiCachedLogCount;
    UITableView *m_logTableView;
    UILabel *m_emptyDisplayLabel;
}

@property(retain, nonatomic) UILabel *m_emptyDisplayLabel; // @synthesize m_emptyDisplayLabel;
@property(retain, nonatomic) UITableView *m_logTableView; // @synthesize m_logTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)localizeUI;
- (void)themeUI;
- (void)UpdateDisplayWithNewCount:(long long)arg1;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)updateViewAfterClearLog;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithType:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ManageCertificatesViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, CertDeletionListenerProtocol, SettingsChangeListenerProtocol, FileDownloaderDelegate, HUDProgressViewDelegate, InfoViewControllerDelegate>
{
    UITableView *certsTableView;
    UISegmentedControl *userAndServerCertsControl;
    UIView *segmentControlView;
    id <CertDeletionSourceProtocol> m_certDeletionDelegate;
    struct CertificateItems m_userCertificateItems;
    vector_ee50fed1 m_serverCertList;
    HUDProgressView *m_progressView;
    UIBarButtonItem *m_editButton;
    UIBarButtonItem *m_doneButton;
    NSString *m_headerText;
    IOSFileDownloader *m_pFileDownloader;
    NSIndexPath *m_deleteCertIndexPath;
    _Bool m_bCertImportInProcess;
}

+ (id)createCertCellForTableView:(id)arg1 withCertificate:(struct AppleVpnCertificate *)arg2 canSelect:(_Bool)arg3;
@property(retain, nonatomic) NSIndexPath *deleteCertIndexPath; // @synthesize deleteCertIndexPath=m_deleteCertIndexPath;
@property(retain, nonatomic) NSString *headerText; // @synthesize headerText=m_headerText;
@property(retain, nonatomic) UIView *segmentControlView; // @synthesize segmentControlView;
@property(retain, nonatomic) UISegmentedControl *userAndServerCertsControl; // @synthesize userAndServerCertsControl;
@property(retain, nonatomic) UITableView *certsTableView; // @synthesize certsTableView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (void)showInfo;
- (void)hudProgressViewTimedOut;
- (long long)loadUserCertificates;
- (void)refreshUI;
- (void)localizeUI;
- (void)themeUI;
- (void)doDone;
- (void)doEdit;
- (void)initTableHeaderAndFooter;
- (void)dismissProgressView;
- (void)displayProgressView:(id)arg1;
- (void)deleteAllServerCertsFromList;
- (void)deleteAllCerts;
- (void)deleteCert;
- (void)showCertDetailsViewControllerForIndexPath:(id)arg1;
- (void)showDialogWithTitle:(const char *)arg1 withTag:(long long)arg2;
- (void)handleTabPress:(id)arg1;
- (void)DownloadCompleteCB:(_Bool)arg1 receivedData:(id)arg2;
- (void)LangChanged;
- (void)HandleCertificateImportReply:(id)arg1;
- (void)HandleCertificatesDeleteReply:(id)arg1;
- (void)HandleGetServerCertsReplyWithError:(id)arg1;
- (void)HandleGetServerCertsReplyFromPlugins:(id)arg1;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ManageLocalizationViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol, LocalizationListenerProtocol>
{
    UITableView *localizationTableView;
    NSMutableArray *m_supportedLangs;
    long long m_langIndex;
}

@property(retain, nonatomic) UITableView *localizationTableView; // @synthesize localizationTableView;
- (void).cxx_destruct;
- (void)LocalizationChanged;
- (void)updateSupportedLangs;
- (void)localizeUI;
- (void)themeUI;
- (void)LangChanged;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ManageProfileViewController : UIViewController <UITableViewDelegate, UIActionSheetDelegate, UITableViewDataSource, ProfileListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *profileTableView;
    NSString *profileData;
    _Bool viewProfile;
    NSMutableDictionary *m_heightAtIndexPath;
}

@property(nonatomic) _Bool viewProfile; // @synthesize viewProfile;
@property(retain, nonatomic) NSString *profileData; // @synthesize profileData;
@property(retain, nonatomic) UITableView *profileTableView; // @synthesize profileTableView;
- (void).cxx_destruct;
- (void)ProfileChanged;
- (void)applicationDidEnterForeground;
- (void)showProfile:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)loadProfile;
- (void)LangChanged;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OnDemandRulesViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, RuleDetailsDelegate, SettingsChangeListenerProtocol>
{
    UITableView *onDemandRulesTableView;
    id <OnDemandRulesDelegate> onDemandRulesDelegate;
    NSMutableArray *m_onDemandRules;
    NSMutableArray *m_savedRules;
    _Bool m_bCanEdit;
    unsigned long long m_activeRule;
    UIBarButtonItem *m_editButton;
    UIBarButtonItem *m_doneButton;
    UIBarButtonItem *m_cancelButton;
    UIBarButtonItem *m_backButton;
}

@property(nonatomic) _Bool m_bCanEdit; // @synthesize m_bCanEdit;
@property(nonatomic) __weak id <OnDemandRulesDelegate> onDemandRulesDelegate; // @synthesize onDemandRulesDelegate;
@property(retain, nonatomic) NSMutableArray *m_savedRules; // @synthesize m_savedRules;
@property(retain, nonatomic) NSMutableArray *m_onDemandRules; // @synthesize m_onDemandRules;
@property(retain, nonatomic) UITableView *onDemandRulesTableView; // @synthesize onDemandRulesTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)ruleDetailsUpdate:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)doBack;
- (void)doCancel;
- (void)doDone;
- (void)doEdit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface PListLoader : NSObject
{
}

+ (void)uninitialize;
+ (double)getFloatWithTheme:(id)arg1 category:(id)arg2 key:(id)arg3;
+ (id)getStringWithTheme:(id)arg1 category:(id)arg2 key:(id)arg3;
+ (id)getColorWithTheme:(id)arg1 category:(id)arg2 key:(id)arg3;
+ (id)resolveColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CustomNavigationController : UINavigationController
{
}

- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

__attribute__((visibility("hidden")))
@interface ProtocolSelectionViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *protocolTableView;
    long long m_protocolIndex;
    NSIndexPath *m_oldIndexPath;
    NSArray *m_protocols;
    id <ProtocolSelectionDelegate> m_protocolSelectionDelegate;
}

@property(retain, nonatomic) NSIndexPath *oldIndexPath; // @synthesize oldIndexPath=m_oldIndexPath;
@property(retain, nonatomic) UITableView *protocolTableView; // @synthesize protocolTableView;
- (void).cxx_destruct;
- (void)localizeUI;
- (void)themeUI;
- (void)LangChanged;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)initWithTunnelProtocol:(id)arg1 delegate:(id)arg2 readOnly:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface RoutingTableInfoViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *routingInfoTableView;
    NSArray *mDataModel;
    double mCellHeigh;
    _Bool m_bRotation;
}

@property(retain, nonatomic) UITableView *routingInfoTableView; // @synthesize routingInfoTableView;
- (void).cxx_destruct;
- (void)refresh;
- (void)localizeUI;
- (void)themeUI;
- (void)initDataModel;
- (void)LangChanged;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface RuleDetailsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, InterfaceSelectionDelegate, ActionSelectionDelegate, EvaluateConnectionDelegate, UITextFieldDelegate, KeyboardListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *ruleDetailsTableView;
    NEOnDemandRule *m_ruleDetails;
    NSString *m_ruleDescription;
    _Bool m_bAdd;
    _Bool m_bCanEdit;
    NSMutableArray *m_sectionsMutableArray;
    NSString *m_descriptionTFText;
    NSString *m_URLProbeTFText;
    NSString *m_editAction;
    NSString *m_editInterface;
    NSMutableArray *m_SSIDMutableArray;
    NSMutableArray *m_DNSDomainMutableArray;
    NSMutableArray *m_DNSServerMutableArray;
    UITextField *m_activeTextField;
    NSIndexPath *m_activeIndexPath;
    id <RuleDetailsDelegate> ruleDetailsDelegate;
    _Bool m_bKeyboardVisible;
    _Bool m_bChangeOccurred;
    _Bool m_bForeground;
    UIBarButtonItem *m_editButton;
    UIBarButtonItem *m_doneButton;
    UIBarButtonItem *m_cancelButton;
}

@property(retain, nonatomic) NSIndexPath *m_activeIndexPath; // @synthesize m_activeIndexPath;
@property(retain, nonatomic) UITextField *m_activeTextField; // @synthesize m_activeTextField;
@property(retain, nonatomic) NSString *m_editInterface; // @synthesize m_editInterface;
@property(retain, nonatomic) NSString *m_editAction; // @synthesize m_editAction;
@property(retain, nonatomic) NSString *m_URLProbeTFText; // @synthesize m_URLProbeTFText;
@property(retain, nonatomic) NSString *m_descriptionTFText; // @synthesize m_descriptionTFText;
@property(nonatomic) __weak id <RuleDetailsDelegate> ruleDetailsDelegate; // @synthesize ruleDetailsDelegate;
@property(nonatomic) _Bool m_bCanEdit; // @synthesize m_bCanEdit;
@property(nonatomic) _Bool m_bAdd; // @synthesize m_bAdd;
@property(retain, nonatomic) NSString *m_ruleDescription; // @synthesize m_ruleDescription;
@property(retain, nonatomic) NEOnDemandRule *m_ruleDetails; // @synthesize m_ruleDetails;
@property(retain, nonatomic) UITableView *ruleDetailsTableView; // @synthesize ruleDetailsTableView;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)keyboardWillHide;
- (void)keyboardDidShow;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)evaluateConnectionUpdate:(id)arg1;
- (void)actionSelectionUpdate:(id)arg1;
- (void)interfaceSelectionUpdate:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)sectionTitle:(long long)arg1;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)saveTextChange:(id)arg1;
- (void)addRowAtIndexPath:(id)arg1;
- (void)deleteRowAtIndexPath:(id)arg1;
- (id)cellForRowAtIndexPathEditMode:(id)arg1;
- (id)convertInterface:(id)arg1;
- (id)convertAction:(id)arg1;
- (void)scrollToActiveTextField;
- (void)doCancel;
- (void)doDone;
- (void)doEdit;
- (void)initializeEdit;
- (void)buildSectionsArray;
- (_Bool)validateDomain;
- (void)reportError:(id)arg1 indexPath:(id)arg2 cellTag:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface StatisticsDetailsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, StatisticsListenerProtocol, SettingsChangeListenerProtocol>
{
    UITableView *statsTableView;
    NSArray *dataModel;
    id <StatisticsSourceProtocol> statisticsSource;
    NSString *configId;
}

@property(retain, nonatomic) NSString *configId; // @synthesize configId;
@property(retain, nonatomic) UITableView *statsTableView; // @synthesize statsTableView;
@property(retain, nonatomic) id <StatisticsSourceProtocol> statisticsSource; // @synthesize statisticsSource;
@property(retain, nonatomic) NSArray *dataModel; // @synthesize dataModel;
- (void).cxx_destruct;
- (void)refreshStatisticsData;
- (void)applicationDidEnterForeground;
- (void)LangChanged;
- (void)statisticsUpdated:(id)arg1;
- (void)statisticsRequestTimeout;
- (void)dealloc;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidUnload;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)localizeUI;
- (void)themeUI;
- (void)clearStatistics;
- (void)initTableData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SystemInfoViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *systemInfoTableView;
    NSMutableArray *mDataModel;
}

@property(retain, nonatomic) UITableView *systemInfoTableView; // @synthesize systemInfoTableView;
- (void).cxx_destruct;
- (void)refresh;
- (void)localizeUI;
- (void)themeUI;
- (void)updateWifiandCellInfo;
- (void)initDataModel;
- (void)LangChanged;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TextFieldWithPlaceholder : UITextField
{
    NSString *placeholderText;
    UIColor *placeholderColor;
    double placeholderAlpha;
    UILabel *m_placeholderLabel;
}

@property(nonatomic) double placeholderAlpha; // @synthesize placeholderAlpha;
@property(retain, nonatomic) UIColor *placeholderColor; // @synthesize placeholderColor;
@property(retain, nonatomic) NSString *placeholderText; // @synthesize placeholderText;
- (void).cxx_destruct;
- (void)textFieldDidChange:(id)arg1;
- (void)setPlaceholder:(id)arg1;
- (void)setText:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 withPlaceHolderText:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TransparentTableViewCell : UITableViewCell
{
}

- (void)dealloc;
- (void)setCellStyleUnselected:(long long)arg1;
- (void)setCellStyleSelected:(long long)arg1;
- (void)setTransparent;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UntrustedCertBannerViewController : UIViewController <SettingsChangeListenerProtocol, InfoViewControllerDelegate, UIWebViewDelegate>
{
    UIWebView *certBannerView;
    UIButton *keepMeSafeButton;
    UIButton *changeSettingsButton;
    NSString *m_commonName;
    id <UntrustedCertBannerViewControllerDelegate> m_delegate;
}

@property(retain, nonatomic) UIButton *changeSettingsButton; // @synthesize changeSettingsButton;
@property(retain, nonatomic) UIButton *keepMeSafeButton; // @synthesize keepMeSafeButton;
@property(retain, nonatomic) UIWebView *certBannerView; // @synthesize certBannerView;
- (void).cxx_destruct;
- (void)InfoViewControllerDidFinish:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)showInfo;
- (void)OnChangeSettingsButtonClicked:(id)arg1;
- (void)onKeepMeSafeButtonClicked:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)LangChanged;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)initWithCertData:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UntrustedCertHandler : NSObject <CertDetailsDelegate>
{
    NSDictionary *m_certInfoDict;
    struct AppleVpnCertificate *m_certBannerCert;
    _Bool m_bCertImportAllowed;
    UIAlertController *m_certBannerAlert;
    id <UntrustedCertHandlerDelegate> m_delegate;
    UIViewController *m_viewController;
    NSString *m_certSummary;
}

@property(retain, nonatomic) UIAlertController *certBannerAlert; // @synthesize certBannerAlert=m_certBannerAlert;
@property(readonly, nonatomic) NSDictionary *certInfoDict; // @synthesize certInfoDict=m_certInfoDict;
- (void).cxx_destruct;
- (void)dismissCertDetailViewAndAcceptCert:(_Bool)arg1 andImportCert:(_Bool)arg2;
- (long long)handleUntrustedCert;
- (void)dealloc;
- (id)initWithCert:(id)arg1 andCert:(struct AppleVpnCertificate *)arg2 andMessage:(id)arg3;
- (id)initWithDelegate:(id)arg1 andCertInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface URIHandlerViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol>
{
    UITableView *URIHandlerTableView;
    id <URIHandlerDelegate> URIHandlerDelegate;
    NSIndexPath *activeIndexPath;
    long long activeIndex;
    long long originalIndex;
    basic_string_90719d97 URIControls[3];
}

@property(nonatomic) long long originalIndex; // @synthesize originalIndex;
@property(nonatomic) long long activeIndex; // @synthesize activeIndex;
@property(retain, nonatomic) NSIndexPath *activeIndexPath; // @synthesize activeIndexPath;
@property(nonatomic) __weak id <URIHandlerDelegate> URIHandlerDelegate; // @synthesize URIHandlerDelegate;
@property(retain, nonatomic) UITableView *URIHandlerTableView; // @synthesize URIHandlerTableView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)LangChanged;
- (void)saveURIControl;
- (void)localizeUI;
- (void)themeUI;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidUnload;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface VPNConnectionsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, SettingsChangeListenerProtocol, ConfigurationEditorDelegate, ActiveConfigListenerProtocol>
{
    UITableView *vpnConnectionsTableView;
    NSMutableArray *m_ipVpnConnectionNames;
    NSMutableArray *m_perAppVpnConnectionNames;
    IOSAnyConnectApplicationMgr *m_vpnAppMgr;
    id <HomeViewSourceProtocol> m_vpnHomeView;
    ConfigurationEditorViewController *m_configurationEditorViewController;
}

@property(retain, nonatomic) NSMutableArray *perAppVpnConnectionNames; // @synthesize perAppVpnConnectionNames=m_perAppVpnConnectionNames;
@property(retain, nonatomic) NSMutableArray *ipVpnConnectionNames; // @synthesize ipVpnConnectionNames=m_ipVpnConnectionNames;
@property(nonatomic) __weak id <HomeViewSourceProtocol> vpnHomeView; // @synthesize vpnHomeView=m_vpnHomeView;
@property(nonatomic) __weak IOSAnyConnectApplicationMgr *vpnAppMgr; // @synthesize vpnAppMgr=m_vpnAppMgr;
@property(retain, nonatomic) UITableView *vpnConnectionsTableView; // @synthesize vpnConnectionsTableView;
- (void).cxx_destruct;
- (void)loadConfigNames;
- (void)updateVpnConnections:(id)arg1;
- (void)localizeUI;
- (void)themeUI;
- (void)launchConfigEditor:(id)arg1 vpnConfig:(struct AppleVpnConfig *)arg2 delegate:(id)arg3;
- (void)launchConfigEditor;
- (void)configurationEditorDismiss;
- (void)LangChanged;
- (void)reloadVpnConnections;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface StopVpnIntent : INIntent
{
}

@end

@interface StopVpnIntentResponse : INIntentResponse
{
    long long _code;
}

+ (id)successIntentResponseWithVpnConfig:(id)arg1;
@property(nonatomic) long long code; // @synthesize code=_code;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;

// Remaining properties
@property(copy, nonatomic) NSString *vpnConfig; // @dynamic vpnConfig;

@end

@interface StartVpnIntent : INIntent
{
}


// Remaining properties
@property(copy, nonatomic) NSString *vpnConfig; // @dynamic vpnConfig;
@end

@interface StartVpnIntentResponse : INIntentResponse
{
    long long _code;
}

+ (id)failureRequestedVpnConfigNotFoundIntentResponseWithVpnConfig:(id)arg1;
+ (id)successIntentResponseWithVpnConfig:(id)arg1;
@property(nonatomic) long long code; // @synthesize code=_code;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;

// Remaining properties
@property(copy, nonatomic) NSString *vpnConfig; // @dynamic vpnConfig;

@end

@interface ConnectVpnIntent : INIntent
{
}


// Remaining properties
@property(copy, nonatomic) NSString *vpnConfig; // @dynamic vpnConfig;
@end

@interface ConnectVpnIntentResponse : INIntentResponse
{
    long long _code;
}

@property(nonatomic) long long code; // @synthesize code=_code;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;

@end

@interface AppleVpnConfigBatch : NSObject
{
    list_10bdc403 m_configList;
    CDUnknownBlockType m_pendingCB;
    long long m_pendingStatus;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)startBatchRemoveFromSystem;
- (void)startBatchSaveToSystem;
- (void)BatchRemoveFromSystem;
- (void)BatchSaveToSystem;
- (void)dealloc;
- (id)initWithConfigList:(list_10bdc403)arg1 andCallback:(CDUnknownBlockType)arg2;

@end

@interface AppleVpnConfigListOp : NSObject
{
    AppleVpnConfigsMgr *m_mgr;
}

- (void).cxx_destruct;
- (void)dispatch;
- (id)initWithMgr:(id)arg1;

@end

@interface AppleVpnConfigListOpSave : AppleVpnConfigListOp
{
    list_10bdc403 m_configList;
    _Bool m_bAddNewConfig;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dispatch;
- (id)initWithMgr:(id)arg1 andConfigList:(list_10bdc403)arg2 andNewConfigFlag:(_Bool)arg3;

@end

@interface AppleVpnConfigListOpRemove : AppleVpnConfigListOp
{
    list_10bdc403 m_configList;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dispatch;
- (id)initWithMgr:(id)arg1 andConfigList:(list_10bdc403)arg2;

@end

@interface AppleVpnConfigListOpLoad : AppleVpnConfigListOp
{
    int m_callbackFlag;
}

- (void)dispatch;
- (id)initWithMgr:(id)arg1 andCallbackFlag:(int)arg2;

@end

@interface AppleVpnConfigListOpActive : AppleVpnConfigListOp
{
    NSString *m_activeConfigName;
    long long m_activeConfigIndex;
}

- (void).cxx_destruct;
- (void)dispatch;
- (id)initWithMgr:(id)arg1 andConfigIndex:(long long)arg2;
- (id)initWithMgr:(id)arg1 andConfigName:(id)arg2;

@end

@interface AppleVpnConfigsMgr : NSObject
{
    NSMutableArray *m_pendingOps;
    AppleVpnConfigListOp *m_currentOp;
    NSString *m_defaultConfigName;
    NSString *m_currentConfig;
    NSMutableArray *m_configurationNames;
    struct vector<AppleVpnConfig *, std::__1::allocator<AppleVpnConfig *>> m_configurationVector;
    long long m_nActiveConfigIndex;
    _Bool m_bHaveConfigs;
    id <NSObject> m_notificationId;
    NSMutableDictionary *m_perAppNotificationIds;
    id <AppleVpnConfigsProtocol> _delegate;
}

+ (id)shareManager;
@property(nonatomic) __weak id <AppleVpnConfigsProtocol> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearConfigurations;
- (void)scheduleRunLoopAndCallbacks:(struct AxtVpnConfig *)arg1;
- (void)scheduleRunLoopAndMakeDefaultConfig:(struct AppleVpnConfig *)arg1;
- (void)schedulePerAppRunLoopAndCallbacks:(struct AppleVpnConfig *)arg1;
- (long long)resetDeviceUniqueIdentifier;
- (long long)disconnectActiveConfiguration;
- (long long)connectActiveConfiguration;
- (unsigned long long)getEnabledConfigurationCount;
- (unsigned long long)getConfigurationCount;
- (list_10bdc403)getCachedConfigList;
- (long long)updateVPNConfigurationsOnUpgrade;
- (long long)updateIPCUConfiguration;
- (_Bool)isActiveConfiguration:(struct AppleVpnConfig *)arg1;
- (long long)getConfigurationIndexWithName:(id)arg1;
- (long long)setDefaultConfigName:(id)arg1;
- (id)getConfigurationNames;
- (long long)getActiveConfigurationIndex;
- (id)getActiveConfigurationName;
- (list_10bdc403)getPerAppActiveConfigurations;
- (struct AppleVpnConfig *)getActiveConfiguration;
- (struct AppleVpnConfig *)getConfigurationWithId:(id)arg1;
- (struct AppleVpnConfig *)getConfigurationWithName:(id)arg1;
- (struct AppleVpnConfig *)getConfiguration:(long long)arg1;
- (long long)unschedulePerAppRunLoop;
- (long long)unscheduleRunLoop;
- (void)setActiveConfigurationIndex:(long long)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getListFromSystem:(CDUnknownBlockType)arg1;
- (long long)removeConfigsFromSystem:(list_10bdc403)arg1;
- (long long)saveConfigsIntoSystem:(list_10bdc403)arg1 andNewConfigFlag:(_Bool)arg2;
- (void)setActiveConfigWithIndex:(long long)arg1;
- (void)setActiveConfigWithName:(id)arg1;
- (void)getConfigs:(int)arg1;
- (void)onOpCompleted:(id)arg1;
- (void)dispatchPendingOps;
- (id)init;

@end

@interface Reachability : NSObject
{
    struct __SCNetworkReachability *_reachabilityRef;
}

+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (long long)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface AxtVpnConfigOp : NSObject
{
    id callback;
    AxtVpnConfigJournal *journal;
}

- (void).cxx_destruct;
- (void)dispatch;
- (id)initWithCallback:(id)arg1 andJournal:(id)arg2;

@end

@interface AxtVpnConfigOpSave : AxtVpnConfigOp
{
    NETunnelProviderManager *tpm;
}

- (void).cxx_destruct;
- (id)description;
- (void)dispatch;
- (id)initWithTpm:(id)arg1 andCallback:(id)arg2 andJournal:(id)arg3;

@end

@interface AxtVpnConfigOpRemove : AxtVpnConfigOp
{
    NETunnelProviderManager *tpm;
}

- (void).cxx_destruct;
- (id)description;
- (void)dispatch;
- (id)initWithTpm:(id)arg1 andCallback:(id)arg2 andJournal:(id)arg3;

@end

@interface AxtVpnConfigOpLoad : AxtVpnConfigOp
{
}

- (id)description;
- (void)dispatch;
- (id)initWithCallback:(id)arg1 andJournal:(id)arg2;

@end

@interface AxtVpnConfigJournal : NSObject
{
    NSMutableArray *m_pendingOps;
    AxtVpnConfigOp *m_currentOp;
}

+ (id)sharedManager;
- (void).cxx_destruct;
- (void)onOpCompleted:(id)arg1;
- (void)dispatchPendingOps;
- (void)load:(id)arg1;
- (void)remove:(id)arg1 cb:(id)arg2;
- (void)save:(id)arg1 cb:(id)arg2;
- (id)init;

@end

@interface UIImage (ImageWithColor)
+ (id)generateImage:(id)arg1 withColor:(id)arg2;
@end

@interface UINavigationController (DismissKeyboard)
- (_Bool)disablesAutomaticKeyboardDismissal;
@end

